##==================================================================##
#                       DEFAULT                                     ##
#===================================================================##
[DEFAULT]
# bsub submit command, "-Is" is interactive mode, without "-Is" is batch mode
_job_cmd                                           = bsub -Is
# job queue, format: "-q $queue_name"
_job_queue                                         = -q op4
# job cpu number, cpu number must put at last place, foramt "-n $cpu_number" or "-m $host_name -n $cpu_number"
_job_cpu_number                                    = -n 4
# job resources, please put centos6 at the first place, ex. "centos6 select[mem>20000]  rusage[mem=20000]"
#-- if $CALIBRE_HOME contain "ixl",use the centos5 to run drc-----------
#-- if $CALIBRE_HOME contain "aoi",use the centos6 to run drc------------
_job_resource                                      = -R "centos6 span[hosts=1]"
# job restore cpu number, cpu number must put at last place, foramt "-n $cpu_number" or "-m $host_name -n $cpu_number"
_job_restore_cpu_number                            = -n 1
# job restore resources, please put centos6 at the first place, ex. "centos6 select[mem>20000]  rusage[mem=20000]"
_job_restore_resource                              = -R "centos6 span[hosts=1]"

# # 240|300; special for 7nm lib cell, value: 240/300 
lib_cell_height                                    = 

# # block|top, define design style, it can be a block or top for different rule deck to be used. 
design_style                                       = block

##==================================================================##
#                        opus_oa.csh                                ##
#===================================================================##
[opus_oa.csh]
_exec_cmd                                           = csh
_exec_tool                                          = module load cadence/ICADV12.20.704 

# foundary provide the std cell oa,then opus_oa stage skip generate std cell oa
skip_std_oa                                         = false
std_oa_file                                         = 
# opus oa stage skip generate cds lib or not
opus_skip_gen_standard_lib                          = false
cds_lib_path                                        = /proj/TRAINING/OP_LAB/fruit/WORK/simonz/orange/PV/cds.lib
#opus_oa_output_path                                 = /proj/Ana37507/WORK/adaw/PV/opus_oa_lib

##==================================================================##
#                        opus.csh                                   ##
#===================================================================##
[opus.csh]
_exec_cmd                                           = csh
_exec_tool                                          = module load cadence/ICADV12.20.704

# fill with cds lib path 
cds_lib_path                                        =  /proj/TRAINING/OP_LAB/fruit/WORK/simonz/orange/PV/cds.lib

# Ignore Missing cellViews During Translation and Continue Translation
opus_ignore_missing_cells                           = false 

##==================================================================##
#                        opus_dummy.csh                             ##
#===================================================================##
[opus_dummy.csh]
_exec_cmd                                           = csh
_exec_tool                                          = module load cadence/ICADV12.20.704  mgc/aoi_cal_2017.1_25.22 

# if $CALIBRE_HOME contain "ixl",use the centos5 to run drc
# if $CALIBRE_HOME contain "aoi",use the centos6 to run drc
_job_resource                                      = -R "centos6 span[hosts=1]"
_job_cpu_number                                    = -n 2

# true mean creat dummy_metal, false not.
dummy_metal_creat                                   = true

# true mean creat dummy_odpo, false not.
dummy_odpo_creat                                    = true

# true mean creat dummy_cod, false not.
dummy_cod_creat                                     = true

# block pv rule deck. if cal_deck_* varaibles are empty, liblist calibre ruel deck will be used for PV
cal_decks_metal_for_block                           = /proj/TRAINING/OP_LAB/fruit/WORK/simonz/orange/PV/tech/Dummy_BEOL_CalibreYE_16nmFFP.14a.block
cal_decks_odpo_for_block                            = /proj/TRAINING/OP_LAB/fruit/WORK/simonz/orange/PV/tech/Dummy_FEOL_CalibreYE_16nmFFP.14a.block
cal_decks_cod_for_block                             =

# chip level pv rule deck. if cal_deck_* varaibles are empty, liblist calibre ruel deck will be used for PV
cal_decks_metal_for_top                             = /proj/TRAINING/OP_LAB/fruit/WORK/simonz/orange/PV/tech/Dummy_BEOL_CalibreYE_16nmFFP.14a.top
cal_decks_odpo_for_top                              = /proj/TRAINING/OP_LAB/fruit/WORK/simonz/orange/PV/tech/Dummy_FEOL_CalibreYE_16nmFFP.14a.top
cal_decks_cod_for_top                               =

# samsung metal/odpo/cod source me file 
sourceme_14lpp_metal_file                           = 
sourceme_14lpp_dodpo_file                           = 
sourceme_14lpp_dcod_file                            = 

# user calibre command used for dummy metal/oppo/cod insertion instead of default
# default: calibre  -drc -hier -hyper -turbo ${clbre_drc_CPU_NUMBER} -64  ${run_file}
calibre_insert_dummy_user_run_cmd                   = 

# tool used for gds merge, calibre/opus
tool_use_to_merge_dummy_gds                         = opus

# if use opus to merge gds please fill with cds lib path 
#cds_lib_path                                        = /cds.lib 

# Ignore Missing cellViews During Translation and Continue Translation
opus_ignore_missing_cells                           = false 

##==================================================================##
#                        pv.csh                                     ##
#===================================================================##
[pv.csh]
_exec_cmd                                           = csh
_exec_tool                                          = module load mgc/aoi_cal_2017.1_25.22 

# if $CALIBRE_HOME contain "ixl",use the centos5 to run drc
# if $CALIBRE_HOME contain "aoi",use the centos6 to run drc
# pile = cpu_number/host_number, ex, cpu number = 4, and host number =1 , then pile = 4
#_job_resource                                      = -R "centos6 span[ptile=4] rusage[mem=5000]"
_job_resource                                      = -R "centos6"
_job_cpu_number                                    = -n 1

_multi_inst                                        = v2lvs
                                                     lvs
                                                     drc
                                                     ant

##==================================================================##
#                        drc.csh                                    ##
#===================================================================##
# use absub command to submit job on several servers.For example: absub -r "q:Ana37507 M:10 clbre:10 n:1" -c
calibre_drc_absub_cmd                              = 

# block pv rule deck. if cal_deck_* varaibles are empty, liblist calibre ruel deck will be used for PV 
cal_decks_drc_for_block                            = /proj/TRAINING/OP_LAB/fruit/WORK/simonz/orange/PV/tech/CLN16FFC_11M_2Xa1Xd3Xe2Y2R_032.12b.encrypt.block

# chip level pv rule deck. if cal_deck_* varaibles are empty, liblist calibre ruel deck will be used for PV  
cal_decks_drc_for_top                              = /proj/TRAINING/OP_LAB/fruit/WORK/simonz/orange/PV/tech/CLN16FFC_11M_2Xa1Xd3Xe2Y2R_032.12b.encrypt.top

sourceme_14lpp_drc_file                            = 

calibre_drc_user_run_cmd                           = 
##==================================================================##
#                        v2lvs.csh                                  ##
#===================================================================##

##==================================================================##
#                        lvs.csh                                    ##
#===================================================================##
# if true lvs check use dummy_merge gds.gz, if false lvs check use merge gds.gz
lvs_check_use_dummy_merge_gds                      = true

# block pv rule deck. if cal_deck_* varaibles are empty, liblist calibre ruel deck will be used for PV 
cal_decks_lvs_for_block                            = /proj/TRAINING/OP_LAB/fruit/WORK/simonz/orange/PV/tech/DFM_LVS_RC_CALIBRE_N16FFC_1p11m_ALRDL.v1.0h

# chip level pv rule deck. if cal_deck_* varaibles are empty, liblist calibre ruel deck will be used for PV  
cal_decks_lvs_for_top                              = /proj/TRAINING/OP_LAB/fruit/WORK/simonz/orange/PV/tech/DFM_LVS_RC_CALIBRE_N16FFC_1p11m_ALRDL.v1.0h

sourceme_14lpp_lvs_file                            = 

# hcell file path used for LVS
hcell_file_lvs                                     = /proj/TRAINING/OP_LAB/fruit/WORK/simonz/orange/PV/hcell
# power name in block
power_name_lvs                                     = VDD VBB VPP
# ground name in block
ground_name_lvs                                    = VSS

# calibre lvs user command 
# default is: calibre -lvs -hier -hyper -turbo ${clbre_lvs_CPU_NUMBER} -64 -hcell ${hcell_file} ${lvs_run}
calibre_lvs_user_run_cmd                            = 

##==================================================================##
#                        ant.csh                                    ##
#===================================================================##
sourceme_14lpp_ant_file                            = 

# block pv rule deck. if cal_deck_* varaibles are empty, liblist calibre ruel deck will be used for PV 
cal_decks_ant_for_block                            = /proj/TRAINING/OP_LAB/fruit/WORK/simonz/orange/PV/tech/CLN16FFC_11M.ANT_032.12b

# chip level pv rule deck. if cal_deck_* varaibles are empty, liblist calibre ruel deck will be used for PV  
cal_decks_ant_for_top                              = /proj/TRAINING/OP_LAB/fruit/WORK/simonz/orange/PV/tech/CLN16FFC_11M.ANT_032.12b

# calibre lvs user command 
# default is: calibre  -drc -hier -hyper -turbo ${clbre_ant_CPU_NUMBER} -64 ${ant_run}
calibre_ant_user_run_cmd                           =

