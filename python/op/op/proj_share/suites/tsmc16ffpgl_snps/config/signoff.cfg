[DEFAULT]

################################################
# Product Review                               #
################################################

PD_01_01_category       = Design Statistic
PD_01_01_owner          = PM
PD_01_01_item           = Process
PD_01_01_description    = Wafer vendor + process code
PD_01_01_support        = no
PD_01_01_criteria       = 

PD_01_02_category       = Design Statistic
PD_01_02_owner          = PM
PD_01_02_item           = Metal code
PD_01_02_description    = (e.g. 1P8M)
PD_01_02_support        = no
PD_01_02_criteria       = 

PD_01_03_category       = Design Statistic
PD_01_03_owner          = PM
PD_01_03_item           = Vt opt
PD_01_03_description    = (e.g. HVT,uLVT)
PD_01_03_support        = no
PD_01_03_criteria       = 

PD_01_04_category       = Design Statistic
PD_01_04_owner          = APE
PD_01_04_item           = PKG TYPE
PD_01_04_description    = (e.g. FCBGA)
PD_01_04_support        = no
PD_01_04_criteria       = 

PD_01_05_category       = Design Statistic
PD_01_05_owner          = APE
PD_01_05_item           = PKG # of layer
PD_01_05_description    = (e.g. 4-2-4)
PD_01_05_support        = no
PD_01_05_criteria       = 

PD_01_06_category       = Design Statistic
PD_01_06_owner          = APE
PD_01_06_item           = Pin Count
PD_01_06_description    = (e.g. 1028)
PD_01_06_support        = no
PD_01_06_criteria       = 

PD_01_21_category       = Design Statistic
PD_01_21_owner          = APE
PD_01_21_item           = Body size
PD_01_21_description    = (e.g. 17mm x 17mm)
PD_01_21_support        = no
PD_01_21_criteria       = 

PD_01_22_category       = Design Statistic
PD_01_22_owner          = APE
PD_01_22_item           = Ball(lead) pitch
PD_01_22_description    = (e.g. 1mm)
PD_01_22_support        = no
PD_01_22_criteria       = 

PD_01_07_category       = Back End Cost
PD_01_07_owner          = PE
PD_01_07_item           = CP # of site
PD_01_07_description    = (e.g. 1)
PD_01_07_support        = no
PD_01_07_criteria       = 

PD_01_08_category       = Back End Cost
PD_01_08_owner          = TE
PD_01_08_item           = CP time
PD_01_08_description    = (e.g. 20s)
PD_01_08_support        = no
PD_01_08_criteria       = 

PD_01_09_category       = Back End Cost
PD_01_09_owner          = PE
PD_01_09_item           = CP H/R
PD_01_09_description    = (e.g. $120)
PD_01_09_support        = no
PD_01_09_criteria       = 

PD_01_10_category       = Back End Cost
PD_01_10_owner          = PE
PD_01_10_item           = FT # of site
PD_01_10_description    = (e.g. 1)
PD_01_10_support        = no
PD_01_10_criteria       = 

PD_01_11_category       = Back End Cost
PD_01_11_owner          = TE
PD_01_11_item           = FT time
PD_01_11_description    = (e.g. 20s)
PD_01_11_support        = no
PD_01_11_criteria       = 

PD_01_12_category       = Back End Cost
PD_01_12_owner          = PE
PD_01_12_item           = FT H/R
PD_01_12_description    = (e.g. $120)
PD_01_12_support        = no
PD_01_12_criteria       = 

PD_01_13_category       = Back End Cost
PD_01_13_owner          = PE
PD_01_13_item           = BOST
PD_01_13_description    = No / What kinds of BOST
PD_01_13_support        = no
PD_01_13_criteria       = 

PD_01_14_category       = Back End Cost
PD_01_14_owner          = PE
PD_01_14_item           = Burn-In
PD_01_14_description    = Yes /No
PD_01_14_support        = no
PD_01_14_criteria       = 

PD_01_15_category       = Back End Cost
PD_01_15_owner          = PE
PD_01_15_item           = CP yield
PD_01_15_description    = 0
PD_01_15_support        = no
PD_01_15_criteria       = 

PD_01_16_category       = Back End Cost
PD_01_16_owner          = PE
PD_01_16_item           = Assy Yield
PD_01_16_description    = 0
PD_01_16_support        = no
PD_01_16_criteria       = 

PD_01_17_category       = Back End Cost
PD_01_17_owner          = PE
PD_01_17_item           = FT Yield
PD_01_17_description    = 0
PD_01_17_support        = no
PD_01_17_criteria       = 

PD_01_18_category       = Back End Cost
PD_01_18_owner          = PE
PD_01_18_item           = Total Yield
PD_01_18_description    = 0
PD_01_18_support        = no
PD_01_18_criteria       = 

PD_01_19_category       = Design Statistic
PD_01_19_owner          = PL
PD_01_19_item           = Chip X-size
PD_01_19_description    = 0
PD_01_19_support        = no
PD_01_19_criteria       = 

PD_01_20_category       = Design Statistic
PD_01_20_owner          = PL
PD_01_20_item           = Chip Y-size
PD_01_20_description    = 0
PD_01_20_support        = no
PD_01_20_criteria       = 


################################################
# Proj.Specific                                #
################################################

# PJ_01_01_category       =
# PJ_01_01_owner          =
# PJ_01_01_item           =
# PJ_01_01_description    =
# PJ_01_01_support        = no
# PJ_01_01_criteria       = 
# 
# PJ_01_02_category       =
# PJ_01_02_owner          =
# PJ_01_02_item           =
# PJ_01_02_description    =
# PJ_01_02_support        = no
# PJ_01_02_criteria       = 
# 
# PJ_01_03_category       =
# PJ_01_03_owner          =
# PJ_01_03_item           =
# PJ_01_03_description    =
# PJ_01_03_support        = no
# PJ_01_03_criteria       = 


################################################
# Spec&plan                                    #
################################################

SP_01_01_category       = Spec Document
SP_01_01_owner          = DE
SP_01_01_item           = SDR/IDR/FDR document
SP_01_01_description    = SDR sign-off phase:
                          Review the spec requirement with the customer, to get the project level consensus. Create the SDR document to be reviewed.
                          IDR/FDR sign-off phase:
                          Review the design results with the customer, to get the project level consensus. Create the IDR/FDR document to be reviewed.
SP_01_01_support        = no
SP_01_01_criteria       = 

SP_01_02_category       = Spec Document
SP_01_02_owner          = PM
SP_01_02_item           = Product spec
SP_01_02_description    = Create the Product spec formal document
SP_01_02_support        = no
SP_01_02_criteria       = 

SP_01_03_category       = Spec Document
SP_01_03_owner          = PL
SP_01_03_item           = DFT spec
SP_01_03_description    = Create the DFT spec formal document
SP_01_03_support        = no
SP_01_03_criteria       = 

SP_01_04_category       = Spec Document
SP_01_04_owner          = PL
SP_01_04_item           = Package plan
SP_01_04_description    = Package solution to be introduced
SP_01_04_support        = no
SP_01_04_criteria       = 

SP_01_05_category       = Spec Document
SP_01_05_owner          = PL
SP_01_05_item           = Test Plan
SP_01_05_description    = Create the Test Plan spec formal document
SP_01_05_support        = no
SP_01_05_criteria       = 

SP_02_01_category       = Project Plan
SP_02_01_owner          = PL
SP_02_01_item           = Work plan
SP_02_01_description    = Submit the schedule, task, and engineer assignment in OpenProject system, to define the initial work plan. Ensure all tasks have relationships defined.
                          Also clearly define the target milestones.
SP_02_01_support        = no
SP_02_01_criteria       = 

SP_02_02_category       = Project Plan
SP_02_02_owner          = PL
SP_02_02_item           = Scope of work
SP_02_02_description    = Create the task list table, as the SOW appendix
SP_02_02_support        = no
SP_02_02_criteria       = 

SP_02_03_category       = Project Plan
SP_02_03_owner          = PL
SP_02_03_item           = Sign-off check list
SP_02_03_description    = Identify the items which are applicable as the sign-off for the project, and define the target.
SP_02_03_support        = no
SP_02_03_criteria       = 

SP_03_01_category       = Delivery
SP_03_01_owner          = PL
SP_03_01_item           = Delivery check
SP_03_01_description    = Check all the deliverables, to see they are all achieving the hand-off criteria
SP_03_01_support        = no
SP_03_01_criteria       = 

SP_03_02_category       = Delivery
SP_03_02_owner          = PL
SP_03_02_item           = IP spec & delivery check
SP_03_02_description    = Check if all the vendor purchased IP is achieving the required spec, and all the deliverables are ready
SP_03_02_support        = no
SP_03_02_criteria       = 

SP_03_03_category       = Delivery
SP_03_03_owner          = PL
SP_03_03_item           = Custom IP spec & delivery check
SP_03_03_description    = Get the clear concensus with the customer for the spec/delivery requirements for Alchip developping custom IP
SP_03_03_support        = no
SP_03_03_criteria       = 


################################################
# Floorplan                                    #
################################################

FP_01_01_category       = Floorplan
FP_01_01_owner          = DE
FP_01_01_item           = Chipsize
FP_01_01_description    = Get consensus with both engineering and business team
FP_01_01_support        = 
FP_01_01_criteria       = 

FP_01_02_category       = Floorplan
FP_01_02_owner          = DE
FP_01_02_item           = Std-Cell Utilization
FP_01_02_description    = Check Std-Cell utilization
FP_01_02_support        = 
FP_01_02_criteria       = 

FP_01_03_category       = Floorplan
FP_01_03_owner          = DE
FP_01_03_item           = PLL location
FP_01_03_description    = Check PLL location
FP_01_03_support        = 
FP_01_03_criteria       = 

FP_01_04_category       = Floorplan
FP_01_04_owner          = DE
FP_01_04_item           = CKG location
FP_01_04_description    = Check CKG region location
FP_01_04_support        = 
FP_01_04_criteria       = 

FP_01_05_category       = Floorplan
FP_01_05_owner          = DE
FP_01_05_item           = Hard IP placement
FP_01_05_description    = Check Hard IP placement
FP_01_05_support        = 
FP_01_05_criteria       = 

FP_01_06_category       = Floorplan
FP_01_06_owner          = DE
FP_01_06_item           = Physical block partitioning
FP_01_06_description    = Check the top level gate and each physical block partitioning
FP_01_06_support        = 
FP_01_06_criteria       = 

FP_01_07_category       = Floorplan
FP_01_07_owner          = DE
FP_01_07_item           = Block diagram
FP_01_07_description    = Check block diagram
FP_01_07_support        = 
FP_01_07_criteria       = 


################################################
# IP Integration                               #
################################################

IP_01_01_category       = IP Integration
IP_01_01_owner          = DE
IP_01_01_item           = IP Integration Check-list
IP_01_01_description    = Create the IP integration check-list for ALL IPs used in the design. Do NOT just simply copy the check-list from the past projects. Need to double-check all the LATEST IP guideline from the vendor and re-create the check-list by yourself
IP_01_01_support        = no
IP_01_01_criteria       = 

IP_01_02_category       = IP Integration
IP_01_02_owner          = DE
IP_01_02_item           = IP Integration checking
IP_01_02_description    = Review ALL the check-items, and make sure all of them are PASSed
IP_01_02_support        = no
IP_01_02_criteria       = 

IP_01_03_category       = IP Integration
IP_01_03_owner          = DE
IP_01_03_item           = IP vendor check
IP_01_03_description    = Send the GDS/report/etc. to the IP vendor, and get the confirmation the integration results are really OK
IP_01_03_support        = no
IP_01_03_criteria       = 


################################################
# IO-Ring                                      #
################################################

IO_01_01_category       = IO-ring
IO_01_01_owner          = DE
IO_01_01_item           = IO library
IO_01_01_description    = Confirm IO library is correct
IO_01_01_support        = 
IO_01_01_criteria       = 

IO_01_02_category       = IO-ring
IO_01_02_owner          = APE
IO_01_02_item           = Package type
IO_01_02_description    = Package type needs to be fixed
IO_01_02_support        = no
IO_01_02_criteria       = 

IO_01_03_category       = IO-ring
IO_01_03_owner          = DE
IO_01_03_item           = IO-Ring & pin-list
IO_01_03_description    = IO consistency check between golden pin-list & layout (cell type/location/etc. including corner/cut/pendcap/etc.)
IO_01_03_support        = 
IO_01_03_criteria       = 

IO_01_04_category       = IO-ring
IO_01_04_owner          = DE
IO_01_04_item           = IO-Ring & Package ball-map
IO_01_04_description    = Check consistency between IO-Ring & Package ball assignment
IO_01_04_support        = 
IO_01_04_criteria       = 

IO_01_05_category       = IO-ring
IO_01_05_owner          = DE
IO_01_05_item           = Bump/PAD specification
IO_01_05_description    = Check Bump/PAD specification is correct
IO_01_05_support        = no
IO_01_05_criteria       = 

IO_01_06_category       = IO-ring
IO_01_06_owner          = DE
IO_01_06_item           = High speed domain IO-Ring
IO_01_06_description    = Check high speed domain IO location
IO_01_06_support        = 
IO_01_06_criteria       = 

IO_01_07_category       = IO-ring
IO_01_07_owner          = DE
IO_01_07_item           = IO SSO noise
IO_01_07_description    = SSO noise level/induced delay needs to be under the certain number, to avoid the system failure (@min-loading). Package RLC topology needs to be considered
IO_01_07_support        = no
IO_01_07_criteria       = 

IO_01_08_category       = IO-ring
IO_01_08_owner          = DE
IO_01_08_item           = IO Driver strength
IO_01_08_description    = Each IO need to have the enough drive strength to expect the rail-to-rail full-swing wave. (@max-loading/max-frequency) Package RLC topology needs to be considered.
IO_01_08_support        = no
IO_01_08_criteria       = 

IO_01_09_category       = IO-ring
IO_01_09_owner          = DE
IO_01_09_item           = Power/ground domain check
IO_01_09_description    = Make power/ground domain structure clear
IO_01_09_support        = 
IO_01_09_criteria       = 

IO_01_10_category       = IO-ring
IO_01_10_owner          = DE
IO_01_10_item           = Power/ground connection
IO_01_10_description    = Check all power/ground domain connection and correctly isolate the individual power/ground
IO_01_10_support        = 
IO_01_10_criteria       = 

IO_01_11_category       = IO-ring
IO_01_11_owner          = DE
IO_01_11_item           = ESD/SSO/IRdrop/EM
IO_01_11_description    = Confirm the power/ground IO to PKG out have consistency for ESD/SSO/Irdrop/EM simulation condition.
IO_01_11_support        = 
IO_01_11_criteria       = 

IO_01_12_category       = IO-ring
IO_01_12_owner          = DE
IO_01_12_item           = IO accessory placement
IO_01_12_description    = Confirm IO accessory(correct CUT cell, Adapter cell, filler cell, Back-to-Back diode cell, PCLAMP cell, etc) are placed correctly.
IO_01_12_support        = 
IO_01_12_criteria       = 

IO_01_13_category       = IO-ring
IO_01_13_owner          = DE
IO_01_13_item           = IO control signal
IO_01_13_description    = Confirm if the IO control pins can be controlled correctly after power-on
IO_01_13_support        = no
IO_01_13_criteria       = 

IO_01_14_category       = IO-ring
IO_01_14_owner          = DE
IO_01_14_item           = Power on sequence
IO_01_14_description    = Confirm if IO ring are OK for power on sequence, like to use POC
IO_01_14_support        = 
IO_01_14_criteria       = 

IO_01_15_category       = IO-ring
IO_01_15_owner          = DE
IO_01_15_item           = Power/ground IO type
IO_01_15_description    = Confirm if correct power/ground IO type  are used like analog type, digital type and so on.
IO_01_15_support        = 
IO_01_15_criteria       = 

IO_01_16_category       = IO-ring
IO_01_16_owner          = DE
IO_01_16_item           = Follow IO library specific check-list
IO_01_16_description    = Create the IO library (IP) specific check-list and follow that to integrate the Ios
IO_01_16_support        = 
IO_01_16_criteria       = 

IO_01_17_category       = IO-ring
IO_01_17_owner          = DE
IO_01_17_item           = Physical only IO logical connection
IO_01_17_description    = Even physical-only IO cell (which is NOT in original RTL/netlist) sometimes needs logical connection like 1'b0/1'b1. P&R tool usually makes 1\'b0 connections automatically for such physical-only cells, but user needs to make the connection instead.
IO_01_17_support        = 
IO_01_17_criteria       = 

IO_01_18_category       = IO-ring
IO_01_18_owner          = DE
IO_01_18_item           = Voltage level selection signal
IO_01_18_description    = Some IO library requires 1 or 0 connection which is to determine the voltage level, like 3.3V, 1.8V. Make sure that all the connections are really correct for each IO power domains
                          * This is new check-list added based on Sony J-CHIP experience
IO_01_18_support        = 
IO_01_18_criteria       = 


################################################
# Power                                        #
################################################

PW_01_01_category       = Power
PW_01_01_owner          = DE
PW_01_01_item           = Power mesh structure
PW_01_01_description    = Check Power-mesh structure
PW_01_01_support        = no
PW_01_01_criteria       = 

PW_01_02_category       = Power
PW_01_02_owner          = DE
PW_01_02_item           = Power domain consideration
PW_01_02_description    = Check power domain and floorplan consistency
PW_01_02_support        = 
PW_01_02_criteria       = 

PW_01_03_category       = Power
PW_01_03_owner          = DE
PW_01_03_item           = Static IR-drop in system-mode
PW_01_03_description    = Static power-drop needs to be under the certain amount
PW_01_03_support        = 
PW_01_03_criteria       = 

PW_01_04_category       = Power
PW_01_04_owner          = DE
PW_01_04_item           = Static IR-drop in system-mode
PW_01_04_description    = Static ground-bounce needs to be under the certain amount
PW_01_04_support        = 
PW_01_04_criteria       = 

PW_01_05_category       = Power
PW_01_05_owner          = DE
PW_01_05_item           = Static IR-drop in system-mode
PW_01_05_description    = (Worst static power-drop) + (Worst static ground-bounce) needs to be under the certain amount
PW_01_05_support        = 
PW_01_05_criteria       = 

PW_01_06_category       = Power
PW_01_06_owner          = DE
PW_01_06_item           = Static IR-drop in system-mode
PW_01_06_description    = Worst static (power-drop + ground-bounce) needs to be under the certain amount
PW_01_06_support        = 
PW_01_06_criteria       = 

PW_01_07_category       = Power
PW_01_07_owner          = DE
PW_01_07_item           = Dynamic IR-drop in system-mode
PW_01_07_description    = Vector-less dynamic IR-drop (power-drop + ground-bounce) needs to be under the certain amount
PW_01_07_support        = 
PW_01_07_criteria       = 

PW_01_08_category       = Power
PW_01_08_owner          = DE
PW_01_08_item           = Dynamic IR-drop in scan-shift-mode
PW_01_08_description    = Shift-pattern base dynamic IR-drop (power-drop + ground-bounce) needs to be under the certain amount
PW_01_08_support        = 
PW_01_08_criteria       = 

PW_01_09_category       = Power
PW_01_09_owner          = DE
PW_01_09_item           = Dynamic IR-drop on critical special IP clock cells in system-mode
PW_01_09_description    = Need smaller dyamic IR-drop target for the critical special IP clock cells
PW_01_09_support        = 
PW_01_09_criteria       = 

PW_01_10_category       = Power
PW_01_10_owner          = DE
PW_01_10_item           = Distance from standard cell to PG trunk
PW_01_10_description    = Each individual standard cells need to be placed within the certain distance from the closest PG trunks
PW_01_10_support        = 
PW_01_10_criteria       = 

PW_01_11_category       = Power
PW_01_11_owner          = DE
PW_01_11_item           = DC-EM (power）
PW_01_11_description    = Avoid electrical migration to avoid the reliability concern. Need to meet EM criteria on Wires/Vias to gurantee the operation life
PW_01_11_support        = 
PW_01_11_criteria       = 

PW_01_12_category       = Power
PW_01_12_owner          = DE
PW_01_12_item           = DC-EM (pad）
PW_01_12_description    = Avoid electrical migration to avoid the reliability concern. Need to meet EM criteria on IO PAD to gurantee the operation life
PW_01_12_support        = 
PW_01_12_criteria       = 

PW_01_13_category       = Power
PW_01_13_owner          = DE
PW_01_13_item           = Dynaic power consumption
PW_01_13_description    = Achieve the certain dyamic power target under the specific condition.
PW_01_13_support        = 
PW_01_13_criteria       = 

PW_01_14_category       = Power
PW_01_14_owner          = DE
PW_01_14_item           = Leakage power consumption
PW_01_14_description    = Achieve the certain leakage power target under the specific condition.
PW_01_14_support        = 
PW_01_14_criteria       = 

PW_01_15_category       = Power
PW_01_15_owner          = DE
PW_01_15_item           = Power calculation condition
PW_01_15_description    = Correct condition needs to be used for power calculation (vector, PVT, tool, mode, etc.)
PW_01_15_support        = 
PW_01_15_criteria       = 

PW_01_16_category       = Power
PW_01_16_owner          = DE
PW_01_16_item           = Power estimation condition
PW_01_16_description    = Correct condition needs to be used for power estimation at the pre-layout stage (vector, PVT, tool, mode, etc.)
PW_01_16_support        = 
PW_01_16_criteria       = 

PW_01_17_category       = Power
PW_01_17_owner          = DE
PW_01_17_item           = PKG thermal resistence
PW_01_17_description    = Check the package thermal resistance to meet junction temperature and ambient temperature with the target chip power
PW_01_17_support        = no
PW_01_17_criteria       = 

PW_01_18_category       = Power
PW_01_18_owner          = DE
PW_01_18_item           = Power on/off sequence
PW_01_18_description    = Identify all individual power domains and check the power on/off sequence.
                          Create the chip specification document to clearly define it
PW_01_18_support        = no
PW_01_18_criteria       = 

PW_01_19_category       = Power
PW_01_19_owner          = DE
PW_01_19_item           = Resistance from the power/ground source
PW_01_19_description    = All power/ground wire/instance needs to achieve the certain resistance from the power/ground source (PAD)
PW_01_19_support        = 
PW_01_19_criteria       = 


################################################
# Clock                                        #
################################################

CK_01_01_category       = Clock
CK_01_01_owner          = DE
CK_01_01_item           = Clock diagram / Clock structure
CK_01_01_description    = Check and understand the clock structure to plan clock design strategy
CK_01_01_support        = no
CK_01_01_criteria       = 

CK_01_02_category       = Clock
CK_01_02_owner          = DE
CK_01_02_item           = Clock strategy
CK_01_02_description    = Report which clock are designed as FB/Multi-drive/CTS/etc
CK_01_02_support        = no
CK_01_02_criteria       = 

CK_01_03_category       = Clock
CK_01_03_owner          = DE
CK_01_03_item           = Balance type cells
CK_01_03_description    = If PN balanced type cell library is available, use it on clock paths
CK_01_03_support        = 
CK_01_03_criteria       = 

CK_01_04_category       = Clock
CK_01_04_owner          = DE
CK_01_04_item           = Single VTH type cells
CK_01_04_description    = Use single type of VTH cells on clock paths. Do NOT mix-up HVT/SVT/…, on all the clock paths. As the default, use SVT type.
CK_01_04_support        = 
CK_01_04_criteria       = 

CK_01_05_category       = Clock
CK_01_05_owner          = DE
CK_01_05_item           = No weak-drive cell on clock
CK_01_05_description    = Check the low-drive cell type on the clock paths
CK_01_05_support        = 
CK_01_05_criteria       = 

CK_01_06_category       = Clock
CK_01_06_owner          = DE
CK_01_06_item           = Max transition
CK_01_06_description    = Check the max-transition on the clock paths
CK_01_06_support        = 
CK_01_06_criteria       = 

CK_01_07_category       = Clock
CK_01_07_owner          = DE
CK_01_07_item           = Non-default rule routing for clocks
CK_01_07_description    = Wide-width/wide-space routing on all clock nets except the final stage nets on the clock-tree which are directly connected to FF
CK_01_07_support        = 
CK_01_07_criteria       = 

CK_01_08_category       = Clock
CK_01_08_owner          = DE
CK_01_08_item           = Shield routing
CK_01_08_description    = Shield routing on the specific clock nets with more than the certain shielding ratio
CK_01_08_support        = 
CK_01_08_criteria       = 

CK_01_09_category       = Clock
CK_01_09_owner          = DE
CK_01_09_item           = PLL + CKG location
CK_01_09_description    = PLL & Clock generation module needs to be strategically placed at the certain location
CK_01_09_support        = 
CK_01_09_criteria       = 

CK_01_10_category       = Clock
CK_01_10_owner          = DE
CK_01_10_item           = Clock skew
CK_01_10_description    = Global clock skew needs to be under the certain number
CK_01_10_support        = 
CK_01_10_criteria       = 

CK_01_11_category       = Clock
CK_01_11_owner          = DE
CK_01_11_item           = Clock delay
CK_01_11_description    = Global clock delay needs to be under the certain number
CK_01_11_support        = 
CK_01_11_criteria       = 

CK_01_12_category       = Clock
CK_01_12_owner          = DE
CK_01_12_item           = Additional timing margin on different VTH type clock paths
CK_01_12_description    = Because of some special reason, in case launch and capture clock paths VTH types are different, apply additional more timing margin to cover unexpecting variation
                          This kind of special case possibly happens for cross voltage domain timing checks
CK_01_12_support        = 
CK_01_12_criteria       = 

CK_01_13_category       = Clock
CK_01_13_owner          = DE
CK_01_13_item           = NO generated clock on hierarchy port
CK_01_13_description    = Do NOT define the clock on the logic hierarchy ports in SDC.
CK_01_13_support        = 
CK_01_13_criteria       = 

CK_01_14_category       = Clock
CK_01_14_owner          = DE
CK_01_14_item           = NO unconstraint FFs
CK_01_14_description    = All FFs must have the clock connection and correctly constrained in SDC. (either system-mode or test-mode)
CK_01_14_support        = 
CK_01_14_criteria       = 

CK_01_15_category       = Clock
CK_01_15_owner          = DE
CK_01_15_item           = Decap for clock cells
CK_01_15_description    = Miinimize jitter on critical clock paths for high-speed IP clocks & big clock network, by adding the decap around the drivers
CK_01_15_support        = 
CK_01_15_criteria       = 

CK_01_16_category       = Clock
CK_01_16_owner          = DE
CK_01_16_item           = Multi-drive placement/routing
CK_01_16_description    = Multi-drive buffers/routings need to be correctly implemented and fixed. Make sure NO auto cell-move nor routing.
CK_01_16_support        = 
CK_01_16_criteria       = 

CK_01_17_category       = Clock
CK_01_17_owner          = DE
CK_01_17_item           = Clock gating fanout for fishbone
CK_01_17_description    = In fishbone clock, to gurantee the minimum delay/skew at the final stage, clock gating fanout needs to be under the certain number
CK_01_17_support        = 
CK_01_17_criteria       = 

CK_01_18_category       = Clock
CK_01_18_owner          = DE
CK_01_18_item           = IP clock layout
CK_01_18_description    = IP clock buffering/wiring need the special care by manual.
CK_01_18_support        = no
CK_01_18_criteria       = 

CK_01_19_category       = Clock
CK_01_19_owner          = DE
CK_01_19_item           = IP clock duty cycle
CK_01_19_description    = IP clock duty cycle needs to be under the certain ranges
CK_01_19_support        = 
CK_01_19_criteria       = 

CK_02_01_category       = Reset
CK_02_01_owner          = DE
CK_02_01_item           = Reset diagram / Reset structure
CK_02_01_description    = Check and understand the clock structure to plan clock design strategy
CK_02_01_support        = no
CK_02_01_criteria       = 

CK_02_02_category       = Reset
CK_02_02_owner          = DE
CK_02_02_item           = Reset strategy
CK_02_02_description    = Report reset path timing layout strategy
CK_02_02_support        = no
CK_02_02_criteria       = 

CK_02_03_category       = Reset
CK_02_03_owner          = DE
CK_02_03_item           = Non-default rule routing for resets
CK_02_03_description    = Wide-width/wide-space routing on all reset nets except the final stage nets on the reset-tree which are directly connected to FF
CK_02_03_support        = 
CK_02_03_criteria       = 


################################################
# DFT                                          #
################################################

DF_01_01_category       = Generic
DF_01_01_owner          = DFT
DF_01_01_item           = DFT spec document
DF_01_01_description    = Create the DFT implementaion spec document including test strategy and planning. Attach file name.
                          Template:
                           (Project_Name)_DFT_specificaton.docx
DF_01_01_support        = no
DF_01_01_criteria       = 

DF_01_02_category       = Generic
DF_01_02_owner          = DFT
DF_01_02_item           = Failure Diagnosis / Analysis Level
DF_01_02_description    = Clarify the diagnosis level for logic, memory and so on. It is needed to make an agreement with customer.
DF_01_02_support        = no
DF_01_02_criteria       = 

DF_01_03_category       = Generic
DF_01_03_owner          = DFT
DF_01_03_item           = Yield estimation by SRAM repair feature
DF_01_03_description    = Confirm an efficiency of yield improvement by SRAM repair.
DF_01_03_support        = no
DF_01_03_criteria       = 

DF_01_04_category       = Generic
DF_01_04_owner          = DFT
DF_01_04_item           = DFT pin assignment
DF_01_04_description    = DFT pin needs to be assigned based on the chip floorplan. Choose the pins which are located close to the corresponding target logic/IP.
DF_01_04_support        = no
DF_01_04_criteria       = 

DF_01_05_category       = Generic
DF_01_05_owner          = DFT
DF_01_05_item           = IP/functional test integration request from customer
DF_01_05_description    = HAVE TO ask BM/PM to negotiate with customer to do VERIFICATION by customer.
DF_01_05_support        = no
DF_01_05_criteria       = 

DF_01_06_category       = Generic
DF_01_06_owner          = DFT
DF_01_06_item           = Async path test check
DF_01_06_description    = Ask customer list out async path/provide functional pattern earlier right after IDR.
DF_01_06_support        = no
DF_01_06_criteria       = 

DF_01_07_category       = Generic
DF_01_07_owner          = DFT
DF_01_07_item           = Mode decoder check
DF_01_07_description    = Check a mode decoder module can enter all test modes.
                          Check Condition
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : All test modes
DF_01_07_support        = no
DF_01_07_criteria       = 

DF_01_08_category       = Generic
DF_01_08_owner          = DFT
DF_01_08_item           = Related logic disable for power saving
DF_01_08_description    = Check some intentional logics can be diabled under  specific modes in order to save the power consumption.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : All test modes
DF_01_08_support        = no
DF_01_08_criteria       = 

DF_01_09_category       = Generic
DF_01_09_owner          = DFT
DF_01_09_item           = Pinshare logic check (physical placement)
DF_01_09_description    = Check all pinshare logic can follow adjacency rule based on floorplan.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : All test modes
DF_01_09_support        = no
DF_01_09_criteria       = 

DF_01_10_category       = Generic
DF_01_10_owner          = DFT
DF_01_10_item           = Pinshare logic check (Output Enable Control)
DF_01_10_description    = OEN control check (e.g. oscillator IO or IO feeds PLL reference clock).
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : All test modes
DF_01_10_support        = no
DF_01_10_criteria       = 

DF_01_11_category       = Generic
DF_01_11_owner          = DFT
DF_01_11_item           = Pinshare logic check (Oscillator I/O)
DF_01_11_description    = OSC I/O cfg pin check (feeds PLL ref clock).
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : All test modes
DF_01_11_support        = no
DF_01_11_criteria       = 

DF_01_12_category       = Generic
DF_01_12_owner          = DFT
DF_01_12_item           = Pinshare logic check (IO configuration pins)
DF_01_12_description    = IO cfg pin check under all DFT modes, except IODC mode (e.g. E12, E6, SR, SMT, PU, PD).
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : All test modes
DF_01_12_support        = no
DF_01_12_criteria       = 

DF_01_13_category       = Generic
DF_01_13_owner          = DFT
DF_01_13_item           = Pinshare logic check (drive strength)
DF_01_13_description    = Select higher voltage(drive strength) I/O for output usage when use Multi-voltage I/Os.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : All test modes
DF_01_13_support        = no
DF_01_13_criteria       = 

DF_01_14_category       = Generic
DF_01_14_owner          = DFT
DF_01_14_item           = Pinshare logic check (skew check)
DF_01_14_description    = Skew check when direct access approach such as NAND tree testing method.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : All test modes
DF_01_14_support        = no
DF_01_14_criteria       = 

DF_01_15_category       = Generic
DF_01_15_owner          = DFT
DF_01_15_item           = Formal verification (Function VS DFT) for chip level
DF_01_15_description    = Check FV between system function golden netlist and DFT golden netlist can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : System function mode
DF_01_15_support        = no
DF_01_15_criteria       = 

DF_01_16_category       = Generic
DF_01_16_owner          = DFT
DF_01_16_item           = DFT tool & license check for chip-level
DF_01_16_description    = Check all EDA tool version can be matched to plan in DFT spec document when DFT insertion.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : n/a
                           *Mode : n/a
DF_01_16_support        = no
DF_01_16_criteria       = 

DF_01_17_category       = Generic
DF_01_17_owner          = DFT
DF_01_17_item           = DFT tool & license check for block-level
DF_01_17_description    = Check all EDA tool version can be matched to plan in DFT spec document when DFT insertion.
                          Check Condition:
                           *Level : block-level
                           *Netlist : n/a
                           *Mode : n/a
DF_01_17_support        = no
DF_01_17_criteria       = 

DF_01_18_category       = Generic
DF_01_18_owner          = DFT
DF_01_18_item           = DFT overhead check for chip-level
DF_01_18_description    = Check area overhead by DFT insertion can be reasonable and acceptable for the layout.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : n/a
DF_01_18_support        = no
DF_01_18_criteria       = 

DF_01_19_category       = Generic
DF_01_19_owner          = DFT
DF_01_19_item           = DFT overhead check for block-level
DF_01_19_description    = Check area overhead by DFT insertion can be reasonable and acceptable for the layout.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : n/a
DF_01_19_support        = no
DF_01_19_criteria       = 

DF_01_20_category       = Generic
DF_01_20_owner          = DFT
DF_01_20_item           = Dedicated test clock and reset structure
DF_01_20_description    = If there are some special requirements related with dedicated DFT clock/reset, then DFT team should provide such information to layout team.
                          For example, additional test clock with high-speed for IP testing need to pay attention for routing, clock jitter and so on.
DF_01_20_support        = no
DF_01_20_criteria       = 

DF_02_01_category       = MBIST
DF_02_01_owner          = DFT
DF_02_01_item           = MBIST implementation spec check for block level
DF_02_01_description    = Clarify the implementation spec for MBIST. The implementation environment should be matched to DFT spec document.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : mbist
DF_02_01_support        = no
DF_02_01_criteria       = 

DF_02_28_category       = MBIST
DF_02_28_owner          = DFT
DF_02_28_item           = MBIST SDC spec check for block level
DF_02_28_description    = Clarify the timing spec for MBIST. The timing constraints should be matched to SDC spec document.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : mbist
                          Template:
                           (Project_name)_DFT_SDC_spec.xlsx
DF_02_28_support        = no
DF_02_28_criteria       = 

DF_02_02_category       = MBIST
DF_02_02_owner          = DFT
DF_02_02_item           = MBIST Insertion Log check for block level
DF_02_02_description    = Check there is no fatal error/warning in log file when MBIST inserion.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : mbist
DF_02_02_support        = no
DF_02_02_criteria       = 

DF_02_03_category       = MBIST
DF_02_03_owner          = DFT
DF_02_03_item           = MBIST clock/frequncy consistency check
DF_02_03_description    = Matched with functional clock definition and its frequency. The frequncy and access cycle for MBIST need to match with the function mode.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : mbist
DF_02_03_support        = no
DF_02_03_criteria       = 

DF_02_04_category       = MBIST
DF_02_04_owner          = DFT
DF_02_04_item           = Memory Group check
DF_02_04_description    = MBIST grouping needs to be defined based on the memory placement & frequency.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : mbist
DF_02_04_support        = no
DF_02_04_criteria       = 

DF_02_05_category       = MBIST
DF_02_05_owner          = DFT
DF_02_05_item           = MBIST simulation @unit-delay for block level
DF_02_05_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : mbist
DF_02_05_support        = no
DF_02_05_criteria       = 

DF_02_06_category       = MBIST
DF_02_06_owner          = DFT
DF_02_06_item           = MBIST fault-injection simulation @unit-delay  for block level
DF_02_06_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : mbist
DF_02_06_support        = no
DF_02_06_criteria       = 

DF_02_07_category       = MBIST
DF_02_07_owner          = DFT
DF_02_07_item           = Formal verification (w/ MBIST VS w/o MBIST) for block level
DF_02_07_description    = Check FV between pre-MBIST netlist and post-MBIST netlist can be passed.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : mbist
DF_02_07_support        = no
DF_02_07_criteria       = 

DF_02_08_category       = MBIST
DF_02_08_owner          = DFT
DF_02_08_item           = MBIST timing constraint check for block level
DF_02_08_description    = Check MBIST mode timing report is reasnoable and managable.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : mbist
DF_02_08_support        = no
DF_02_08_criteria       = 

DF_02_09_category       = MBIST
DF_02_09_owner          = DFT
DF_02_09_item           = SDF annotation check @worst corner for block level
DF_02_09_description    = Check there is no error/warning when annotate SDF with worst corner.
                          Check Condition:
                           *Level : block-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : mbist
DF_02_09_support        = no
DF_02_09_criteria       = 

DF_02_10_category       = MBIST
DF_02_10_owner          = DFT
DF_02_10_item           = SDF annotation check @best corner for block level
DF_02_10_description    = Check there is no error/warning when annotate SDF with best corner.
                          Check Condition:
                           *Level : block-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : mbist
DF_02_10_support        = no
DF_02_10_criteria       = 

DF_02_11_category       = MBIST
DF_02_11_owner          = DFT
DF_02_11_item           = MBIST simulation @SDF with worst corner for block level
DF_02_11_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : block-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : mbist
DF_02_11_support        = no
DF_02_11_criteria       = 

DF_02_12_category       = MBIST
DF_02_12_owner          = DFT
DF_02_12_item           = MBIST simulation @SDF with best corner for block level
DF_02_12_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : block-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : mbist
DF_02_12_support        = no
DF_02_12_criteria       = 

DF_02_13_category       = MBIST
DF_02_13_owner          = DFT
DF_02_13_item           = MBIST implementation spec check for chip level
DF_02_13_description    = Clarify the implementation spec for MBIST. The implementation environment should be matched to DFT spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : MBIST_MODE
DF_02_13_support        = no
DF_02_13_criteria       = 

DF_02_29_category       = MBIST
DF_02_29_owner          = DFT
DF_02_29_item           = MBIST SDC spec check for chip level
DF_02_29_description    = Clarify the timing spec for MBIST. The timing constraints should be matched to SDC spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : MBIST_MODE
                          Template:
                           (Project_name)_DFT_SDC_spec.xlsx
DF_02_29_support        = no
DF_02_29_criteria       = 

DF_02_14_category       = MBIST
DF_02_14_owner          = DFT
DF_02_14_item           = MBIST mode setting check
DF_02_14_description    = Check a mode signal and related internal signals can be enabled.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : MBIST_MODE
DF_02_14_support        = no
DF_02_14_criteria       = 

DF_02_15_category       = MBIST
DF_02_15_owner          = DFT
DF_02_15_item           = MBIST Insertion Log check for chip level
DF_02_15_description    = Check there is no fatal error/warning in log file when MBIST inserion.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : MBIST_MODE
DF_02_15_support        = no
DF_02_15_criteria       = 

DF_02_16_category       = MBIST
DF_02_16_owner          = DFT
DF_02_16_item           = MBIST clock/frequncy consistency check
DF_02_16_description    = Matched with functional clock definition and its frequency. The frequncy and access cycle for MBIST need to match with the function mode.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : MBIST_MODE
DF_02_16_support        = no
DF_02_16_criteria       = 

DF_02_17_category       = MBIST
DF_02_17_owner          = DFT
DF_02_17_item           = Memory Group check
DF_02_17_description    = MBIST grouping needs to be defined based on the memory placement & frequency.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : MBIST_MODE
DF_02_17_support        = no
DF_02_17_criteria       = 

DF_02_18_category       = MBIST
DF_02_18_owner          = DFT
DF_02_18_item           = MBIST simulation @unit-delay for chip level
DF_02_18_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : MBIST_MODE
DF_02_18_support        = no
DF_02_18_criteria       = 

DF_02_19_category       = MBIST
DF_02_19_owner          = DFT
DF_02_19_item           = MBIST fault-injection simulation @unit-delay for chip level
DF_02_19_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : MBIST_MODE
DF_02_19_support        = no
DF_02_19_criteria       = 

DF_02_20_category       = MBIST
DF_02_20_owner          = DFT
DF_02_20_item           = MBIST diagnostic simulation with fault-injection @unit-delay
DF_02_20_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : MBIST_MODE
DF_02_20_support        = no
DF_02_20_criteria       = 

DF_02_21_category       = MBIST
DF_02_21_owner          = DFT
DF_02_21_item           = Formal verification (w/ MBIST VS w/o MBIST) for chip level
DF_02_21_description    = Check FV between pre-MBIST netlist and post-MBIST netlist can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : MBIST_MODE
DF_02_21_support        = no
DF_02_21_criteria       = 

DF_02_22_category       = MBIST
DF_02_22_owner          = DFT
DF_02_22_item           = MBIST timing constraint check for chip level (70pf I/O loading)
DF_02_22_description    = Check MBIST mode timing report is reasnoable and managable.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : MBIST_MODE
DF_02_22_support        = no
DF_02_22_criteria       = 

DF_02_23_category       = MBIST
DF_02_23_owner          = DFT
DF_02_23_item           = SDF annotation check @worst corner for chip level
DF_02_23_description    = Check there is no error/warning when annotate SDF with worst corner.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : MBIST_MODE
DF_02_23_support        = no
DF_02_23_criteria       = 

DF_02_24_category       = MBIST
DF_02_24_owner          = DFT
DF_02_24_item           = SDF annotation check @best corner for chip level
DF_02_24_description    = Check there is no error/warning when annotate SDF with best corner.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : MBIST_MODE
DF_02_24_support        = no
DF_02_24_criteria       = 

DF_02_25_category       = MBIST
DF_02_25_owner          = DFT
DF_02_25_item           = MBIST simulation @SDF with worst corner for chip level
DF_02_25_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : MBIST_MODE
DF_02_25_support        = no
DF_02_25_criteria       = 

DF_02_26_category       = MBIST
DF_02_26_owner          = DFT
DF_02_26_item           = MBIST simulation @SDF with best corner for chip level
DF_02_26_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : MBIST_MODE
DF_02_26_support        = no
DF_02_26_criteria       = 

DF_02_27_category       = MBIST
DF_02_27_owner          = DFT
DF_02_27_item           = MBIST test pattern generation
DF_02_27_description    = Check the feasibility of pattern generation and validate the release test pattern.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : MBIST_MODE
DF_02_27_support        = no
DF_02_27_criteria       = 

DF_03_01_category       = SRAM Repair
DF_03_01_owner          = DFT
DF_03_01_item           = SRAM repair implementation spec check for block level
DF_03_01_description    = Clarify the implementation spec for SRAM redundancy repair. The implementation environment should be matched to DFT spec document.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : mbist
DF_03_01_support        = no
DF_03_01_criteria       = 

DF_03_21_category       = SRAM Repair
DF_03_21_owner          = DFT
DF_03_21_item           = SRAM repair SDC spec check for block level
DF_03_21_description    = Clarify the timing spec for SRAM redundancy repair. The timing constraints should be matched to SDC spec document.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : mbist
                          Template:
                           (Project_name)_DFT_SDC_spec.xlsx
DF_03_21_support        = no
DF_03_21_criteria       = 

DF_03_02_category       = SRAM Repair
DF_03_02_owner          = DFT
DF_03_02_item           = SRAM Repair Insertion Log check for block level
DF_03_02_description    = Check there is no fatal error/warning in log file when SRAM redundancy repair circuits inserion.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : mbist
DF_03_02_support        = no
DF_03_02_criteria       = 

DF_03_03_category       = SRAM Repair
DF_03_03_owner          = DFT
DF_03_03_item           = SRAM repair simulation with fault-injection @unit-delay for block level
DF_03_03_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : mbist
DF_03_03_support        = no
DF_03_03_criteria       = 

DF_03_04_category       = SRAM Repair
DF_03_04_owner          = DFT
DF_03_04_item           = SRAM Repair timing constraint check for block level
DF_03_04_description    = Check SRAM repair mode timing report is reasnoable and managable.
                          Check Condition:
                           *Level : block-level
                           *Netlist : post-layout
                           *Mode : mbist
DF_03_04_support        = no
DF_03_04_criteria       = 

DF_03_05_category       = SRAM Repair
DF_03_05_owner          = DFT
DF_03_05_item           = SDF annotation check @worst corner for block level
DF_03_05_description    = Check there is no error/warning when annotate SDF with worst corner.
                          Check Condition:
                           *Level : block-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : mbist
DF_03_05_support        = no
DF_03_05_criteria       = 

DF_03_06_category       = SRAM Repair
DF_03_06_owner          = DFT
DF_03_06_item           = SDF annotation check @best corner for block level
DF_03_06_description    = Check there is no error/warning when annotate SDF with best corner.
                          Check Condition:
                           *Level : block-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : mbist
DF_03_06_support        = no
DF_03_06_criteria       = 

DF_03_07_category       = SRAM Repair
DF_03_07_owner          = DFT
DF_03_07_item           = SRAM repair simulation @SDF with worst corner for block level
DF_03_07_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : block-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : mbist
DF_03_07_support        = no
DF_03_07_criteria       = 

DF_03_08_category       = SRAM Repair
DF_03_08_owner          = DFT
DF_03_08_item           = SRAM repair simulation @SDF with best corner for block level
DF_03_08_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : block-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : mbist
DF_03_08_support        = no
DF_03_08_criteria       = 

DF_03_09_category       = SRAM Repair
DF_03_09_owner          = DFT
DF_03_09_item           = SRAM repair implementation spec check for chip level
DF_03_09_description    = Clarify the implementation spec for SRAM redundancy repair. The implementation environment should be matched to DFT spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : MBIST_MODE
DF_03_09_support        = no
DF_03_09_criteria       = 

DF_03_22_category       = SRAM Repair
DF_03_22_owner          = DFT
DF_03_22_item           = SRAM repair SDC spec check for chip level
DF_03_22_description    = Clarify the timing spec for SRAM redundancy repair. The timing constraints should be matched to SDC spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : MBIST_MODE
                          Template:
                           (Project_name)_DFT_SDC_spec.xlsx
DF_03_22_support        = no
DF_03_22_criteria       = 

DF_03_10_category       = SRAM Repair
DF_03_10_owner          = DFT
DF_03_10_item           = SRAM repair mode setting check
DF_03_10_description    = Check a mode signal and related internal signals can be enabled.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : MBIST_MODE
DF_03_10_support        = no
DF_03_10_criteria       = 

DF_03_11_category       = SRAM Repair
DF_03_11_owner          = DFT
DF_03_11_item           = SRAM Repair Insertion Log check for chip level
DF_03_11_description    = Check there is no fatal error/warning in log file when SRAM redundancy repair circuits inserion.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : MBIST_MODE
DF_03_11_support        = no
DF_03_11_criteria       = 

DF_03_12_category       = SRAM Repair
DF_03_12_owner          = DFT
DF_03_12_item           = SRAM repair simulation with fault-injection @unit-delay for chip level
DF_03_12_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : MBIST_MODE
DF_03_12_support        = no
DF_03_12_criteria       = 

DF_03_13_category       = SRAM Repair
DF_03_13_owner          = DFT
DF_03_13_item           = SRAM repair simulation with fault-injection by customer
DF_03_13_description    = Ask customer to make sure the SRAM repair operation WITH fault-injection under the system function mode. Alchip need to provide the DFT golden netlist and simulation environment.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SYSTEM_MODE
DF_03_13_support        = no
DF_03_13_criteria       = 

DF_03_14_category       = SRAM Repair
DF_03_14_owner          = DFT
DF_03_14_item           = SRAM repair simulation without fault-injection by customer
DF_03_14_description    = Ask customer to make sure the SRAM repair operation WITHOUT fault-injection under the system function mode. Alchip need to provide the DFT golden netlist and simulation environment.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SYSTEM_MODE
DF_03_14_support        = no
DF_03_14_criteria       = 

DF_03_15_category       = SRAM Repair
DF_03_15_owner          = DFT
DF_03_15_item           = SRAM Repair timing constraint check for chip level (70pf I/O loading)
DF_03_15_description    = Check SRAM repair mode timing report is reasnoable and managable.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : MBIST_MODE
DF_03_15_support        = no
DF_03_15_criteria       = 

DF_03_16_category       = SRAM Repair
DF_03_16_owner          = DFT
DF_03_16_item           = SDF annotation check @worst corner for chip level
DF_03_16_description    = Check there is no error/warning when annotate SDF with worst corner.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : MBIST_MODE
DF_03_16_support        = no
DF_03_16_criteria       = 

DF_03_17_category       = SRAM Repair
DF_03_17_owner          = DFT
DF_03_17_item           = SDF annotation check @best corner for chip level
DF_03_17_description    = Check there is no error/warning when annotate SDF with best corner.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : MBIST_MODE
DF_03_17_support        = no
DF_03_17_criteria       = 

DF_03_18_category       = SRAM Repair
DF_03_18_owner          = DFT
DF_03_18_item           = SRAM repair simulation @SDF with worst corner for chip level
DF_03_18_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : MBIST_MODE
DF_03_18_support        = no
DF_03_18_criteria       = 

DF_03_19_category       = SRAM Repair
DF_03_19_owner          = DFT
DF_03_19_item           = SRAM repair simulation @SDF with best corner for chip level
DF_03_19_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : MBIST_MODE
DF_03_19_support        = no
DF_03_19_criteria       = 

DF_03_20_category       = SRAM Repair
DF_03_20_owner          = DFT
DF_03_20_item           = SRAM repair test pattern generation
DF_03_20_description    = Check the feasibility of pattern generation and validate the release test pattern.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : MBIST_MODE
DF_03_20_support        = no
DF_03_20_criteria       = 

DF_04_01_category       = SCAN
DF_04_01_owner          = DFT
DF_04_01_item           = SCAN implementation spec check for block level
DF_04_01_description    = Clarify the implementation spec for SCAN test. The implementation environment should be matched to DFT spec document.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : mbist
DF_04_01_support        = no
DF_04_01_criteria       = 

DF_04_61_category       = SCAN
DF_04_61_owner          = DFT
DF_04_61_item           = SCAN SDC spec check for block level
DF_04_61_description    = Clarify the timing spec for SCAN test. The timing constraints should be matched to SDC spec document.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
                          Template:
                           (Project_name)_DFT_SDC_spec.xlsx
DF_04_61_support        = no
DF_04_61_criteria       = 

DF_04_02_category       = SCAN
DF_04_02_owner          = DFT
DF_04_02_item           = SCAN Insertion Log check for block level
DF_04_02_description    = Check there is no fatal error/warning in log file when SCAN inserion.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
DF_04_02_support        = no
DF_04_02_criteria       = 

DF_04_03_category       = SCAN
DF_04_03_owner          = DFT
DF_04_03_item           = Negative edge FF check for block level
DF_04_03_description    = Check there are FFs which are clocked by negative edge, and such FFs don not have any timing issue when scan testing.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
DF_04_03_support        = no
DF_04_03_criteria       = 

DF_04_04_category       = SCAN
DF_04_04_owner          = DFT
DF_04_04_item           = SCAN clock/frequncy consistency check for block level
DF_04_04_description    = Matched with functional clock definition and its frequency.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
DF_04_04_support        = no
DF_04_04_criteria       = 

DF_04_05_category       = SCAN
DF_04_05_owner          = DFT
DF_04_05_item           = Uncontrolled Scan clock mux check for block level
DF_04_05_description    = Check there is no uncontrolled S-pin of MUX when I0&I1 pins coming from the same source.
                          Check Condition:
                           *Level: block-level
                           *Netlist: pre-layout
                           *Mode: scan
DF_04_05_support        = no
DF_04_05_criteria       = 

DF_04_06_category       = SCAN
DF_04_06_owner          = DFT
DF_04_06_item           = SCAN Max chain length check for block level
DF_04_06_description    = Scan chain length needs to be well balanced. Max chain length needs to be less than the certain number.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
DF_04_06_support        = no
DF_04_06_criteria       = 

DF_04_07_category       = SCAN
DF_04_07_owner          = DFT
DF_04_07_item           = Multiple scan clock check for block level
DF_04_07_description    = Check multiple scan clocks do not propagate to one combinationl logic(OR, AND, etc).
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
DF_04_07_support        = no
DF_04_07_criteria       = 

DF_04_08_category       = SCAN
DF_04_08_owner          = DFT
DF_04_08_item           = SCAN compression ratio check for block level
DF_04_08_description    = SCAN compression ratio can be realistic value based on experience.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
DF_04_08_support        = no
DF_04_08_criteria       = 

DF_04_09_category       = SCAN
DF_04_09_owner          = DFT
DF_04_09_item           = DC-SCAN test coverage and test pattern number check for block level
DF_04_09_description    = DC-SCAN test coverage and test pattern number can achieve the target.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
DF_04_09_support        = no
DF_04_09_criteria       = 

DF_04_10_category       = SCAN
DF_04_10_owner          = DFT
DF_04_10_item           = Non-scan FF check for block level
DF_04_10_description    = Check all non-scan FFs are intentional and expected.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
DF_04_10_support        = no
DF_04_10_criteria       = 

DF_04_11_category       = SCAN
DF_04_11_owner          = DFT
DF_04_11_item           = SCAN TPI efficiency check for block level
DF_04_11_description    = Show TP (Test Point) have inserted with effectiveness to improve the test coverage.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
DF_04_11_support        = no
DF_04_11_criteria       = 

DF_04_12_category       = SCAN
DF_04_12_owner          = DFT
DF_04_12_item           = SCAN ASRI efficiency check for block level
DF_04_12_description    = Show the shift register identification by logic synthesis tool could execute with effectiveness to save the area overhead.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
DF_04_12_support        = no
DF_04_12_criteria       = 

DF_04_13_category       = SCAN
DF_04_13_owner          = DFT
DF_04_13_item           = DC-SCAN DRC for block level
DF_04_13_description    = There is no fatal error/waring for DC-SCAN DRC.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
DF_04_13_support        = no
DF_04_13_criteria       = 

DF_04_14_category       = SCAN
                          (IP:XXX)
DF_04_14_owner          = DFT
DF_04_14_item           = IP scan chain and bypass logic check for block level
DF_04_14_description    = IP scan chains can be enabled, and these chains can be disabled when select to bypass logic.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
DF_04_14_support        = no
DF_04_14_criteria       = 

DF_04_59_category       = SCAN
                          (IP:XXX)
DF_04_59_owner          = DFT
DF_04_59_item           = IP scan ATPG mode signal constraints check for block level
DF_04_59_description    = Check signal values follow to IPs databook when IP work as SCAN operation.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
DF_04_59_support        = no
DF_04_59_criteria       = 

DF_04_15_category       = SCAN
DF_04_15_owner          = DFT
DF_04_15_item           = SCAN memory sequential test and bypass logic check for block level
DF_04_15_description    = The memory sequential test is doable, and memory bypass logic can be enabled when do not execute the memory sequential test.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
DF_04_15_support        = no
DF_04_15_criteria       = 

DF_04_16_category       = SCAN
DF_04_16_owner          = DFT
DF_04_16_item           = SCAN(DC) serial simulation @unit-delay for block level
DF_04_16_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
DF_04_16_support        = no
DF_04_16_criteria       = 

DF_04_17_category       = SCAN
DF_04_17_owner          = DFT
DF_04_17_item           = SCAN(DC) parallel simulation  @unit-delay for block level
DF_04_17_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
DF_04_17_support        = no
DF_04_17_criteria       = 

DF_04_18_category       = SCAN
DF_04_18_owner          = DFT
DF_04_18_item           = Formal verification (w/ SCAN VS w/o SCAN) for block level
DF_04_18_description    = Check FV between pre-SCAN netlist and post-SCAN netlist can be passed.
                          Check Condition:
                           *Level : block-level
                           *Netlist : pre-layout
                           *Mode : scan
DF_04_18_support        = no
DF_04_18_criteria       = 

DF_04_19_category       = SCAN
DF_04_19_owner          = DFT
DF_04_19_item           = SCAN timing constraint check for block level
DF_04_19_description    = Check SCAN mode timing report is reasnoable and managable.
                          Check Condition:
                           *Level : block-level
                           *Netlist : post-layout
                           *Mode : scan
DF_04_19_support        = no
DF_04_19_criteria       = 

DF_04_20_category       = SCAN
DF_04_20_owner          = DFT
DF_04_20_item           = SDF annotation check @worst corner for block level
DF_04_20_description    = Check there is no error/warning when annotate SDF with worst corner.
                          Check Condition:
                           *Level : block-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : scan
DF_04_20_support        = no
DF_04_20_criteria       = 

DF_04_21_category       = SCAN
DF_04_21_owner          = DFT
DF_04_21_item           = SDF annotation check @best corner for block level
DF_04_21_description    = Check there is no error/warning when annotate SDF with best corner.
                          Check Condition:
                           *Level : block-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : scan
DF_04_21_support        = no
DF_04_21_criteria       = 

DF_04_22_category       = SCAN
DF_04_22_owner          = DFT
DF_04_22_item           = SCAN(DC) serial simulation @SDF with worst corner for block level
DF_04_22_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : block-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : scan
DF_04_22_support        = no
DF_04_22_criteria       = 

DF_04_63_category       = SCAN
DF_04_63_owner          = DFT
DF_04_63_item           = SCAN(DC) parallel simulation @SDF with worst corner for block level
DF_04_63_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : block-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : scan
DF_04_63_support        = no
DF_04_63_criteria       = 

DF_04_23_category       = SCAN
DF_04_23_owner          = DFT
DF_04_23_item           = SCAN(DC) serial simulation @SDF with best corner for block level
DF_04_23_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : block-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : scan
DF_04_23_support        = no
DF_04_23_criteria       = 

DF_04_64_category       = SCAN
DF_04_64_owner          = DFT
DF_04_64_item           = SCAN(DC) parallel simulation @SDF with best corner for block level
DF_04_64_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : block-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : scan
DF_04_64_support        = no
DF_04_64_criteria       = 

DF_04_24_category       = SCAN
DF_04_24_owner          = DFT
DF_04_24_item           = SCAN implementation spec check for chip level
DF_04_24_description    = Clarify the implementation spec for SCAN test. The implementation environment should be matched to DFT spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_24_support        = no
DF_04_24_criteria       = 

DF_04_62_category       = SCAN
DF_04_62_owner          = DFT
DF_04_62_item           = SCAN SDC spec check for chip level
DF_04_62_description    = Clarify the timing spec for SCAN test. The timing constraints should be matched to SDC spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
                          Template:
                           (Project_name)_DFT_SDC_spec.xlsx
DF_04_62_support        = no
DF_04_62_criteria       = 

DF_04_25_category       = SCAN
DF_04_25_owner          = DFT
DF_04_25_item           = SCAN shift switching reduction plan check
DF_04_25_description    = Consider the strategy for reduction of switching noise during scan shift cycles (e.g. power aware ATPG, balanced scan shift clock loading and so on).
DF_04_25_support        = no
DF_04_25_criteria       = 

DF_04_26_category       = SCAN
DF_04_26_owner          = DFT
DF_04_26_item           = SCAN mode setting check
DF_04_26_description    = Check a mode signal and related internal signals can be enabled.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_26_support        = no
DF_04_26_criteria       = 

DF_04_27_category       = SCAN
DF_04_27_owner          = DFT
DF_04_27_item           = SCAN OCC plan check
DF_04_27_description    = Clarify the scan OCC plan such as clock source, number of loading FF, scan capture frequency and so on.
DF_04_27_support        = no
DF_04_27_criteria       = 

DF_04_28_category       = SCAN
DF_04_28_owner          = DFT
DF_04_28_item           = SCAN Insertion Log check for chip level
DF_04_28_description    = Check there is no fatal error/warning in log file when SCAN inserion.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_28_support        = no
DF_04_28_criteria       = 

DF_04_29_category       = SCAN
DF_04_29_owner          = DFT
DF_04_29_item           = Negative edge FF check for chip level
DF_04_29_description    = Check there are FFs which are clocked by negative edge, and such FFs do not have any timing issue when scan testing.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_29_support        = no
DF_04_29_criteria       = 

DF_04_30_category       = SCAN
DF_04_30_owner          = DFT
DF_04_30_item           = SCAN clock/frequncy consistency check for chip level
DF_04_30_description    = Matched with functional clock definition and its frequency.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_30_support        = no
DF_04_30_criteria       = 

DF_04_31_category       = SCAN
DF_04_31_owner          = DFT
DF_04_31_item           = Uncontrolled Scan clock mux check for chip level
DF_04_31_description    = Check there is no uncontrolled S-pin of MUX when I0&I1 pins coming from the same source.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_31_support        = no
DF_04_31_criteria       = 

DF_04_32_category       = SCAN
DF_04_32_owner          = DFT
DF_04_32_item           = SCAN Max chain length check for chip level
DF_04_32_description    = Scan chain length needs to be well balanced. Max chain length needs to be less than the certain number.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_32_support        = no
DF_04_32_criteria       = 

DF_04_33_category       = SCAN
DF_04_33_owner          = DFT
DF_04_33_item           = Multiple scan clock check for chip level
DF_04_33_description    = Check multiple scan clocks do not propagate to one combinationl logic(OR, AND, etc).
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_33_support        = no
DF_04_33_criteria       = 

DF_04_34_category       = SCAN
DF_04_34_owner          = DFT
DF_04_34_item           = SCAN compression ratio check for chip level
DF_04_34_description    = SCAN compression ratio can be realistic value based on experience.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_34_support        = no
DF_04_34_criteria       = 

DF_04_35_category       = SCAN
DF_04_35_owner          = DFT
DF_04_35_item           = DC-SCAN test coverage and test pattern number check for chip level
DF_04_35_description    = DC-SCAN test coverage and test pattern number can achieve the target.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : SCAN_MODE
DF_04_35_support        = no
DF_04_35_criteria       = 

DF_04_36_category       = SCAN
DF_04_36_owner          = DFT
DF_04_36_item           = AC-SCAN test coverage and test pattern number check for chip level
DF_04_36_description    = AC-SCAN test coverage and test pattern number can achieve the target.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : SCAN_MODE
DF_04_36_support        = no
DF_04_36_criteria       = 

DF_04_37_category       = SCAN
DF_04_37_owner          = DFT
DF_04_37_item           = Non-scan FF check for chip level
DF_04_37_description    = Check all non-scan FFs are intentional and expected.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_37_support        = no
DF_04_37_criteria       = 

DF_04_38_category       = SCAN
DF_04_38_owner          = DFT
DF_04_38_item           = SCAN TPI efficiency check for chip level
DF_04_38_description    = Show TP (Test Point) have inserted with effectiveness to improve the test coverage.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_38_support        = no
DF_04_38_criteria       = 

DF_04_39_category       = SCAN
DF_04_39_owner          = DFT
DF_04_39_item           = SCAN ASRI efficiency check for chip level
DF_04_39_description    = Show the shift register identification by logic synthesis tool could execute with effectiveness to save the area overhead.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_39_support        = no
DF_04_39_criteria       = 

DF_04_40_category       = SCAN
DF_04_40_owner          = DFT
DF_04_40_item           = DC-SCAN DRC for chip level
DF_04_40_description    = There is no fatal error/waring for DC-SCAN DRC.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : SCAN_MODE
DF_04_40_support        = no
DF_04_40_criteria       = 

DF_04_41_category       = SCAN
DF_04_41_owner          = DFT
DF_04_41_item           = AC-SCAN DRC for chip level
DF_04_41_description    = There is no fatal error/waring for DC-SCAN DRC.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : SCAN_MODE
DF_04_41_support        = no
DF_04_41_criteria       = 

DF_04_42_category       = SCAN
                          (IP:XXX)
DF_04_42_owner          = DFT
DF_04_42_item           = IP scan chain and bypass logic check for chip level
DF_04_42_description    = IP scan chains can be enabled, and these chains can be disabled when select to bypass logic.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_42_support        = no
DF_04_42_criteria       = 

DF_04_60_category       = SCAN
                          (IP:XXX)
DF_04_60_owner          = DFT
DF_04_60_item           = IP scan ATPG mode signal constraints check for chip level
DF_04_60_description    = Check signal values follow to IPs databook when IP work as SCAN operation.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_60_support        = no
DF_04_60_criteria       = 

DF_04_43_category       = SCAN
DF_04_43_owner          = DFT
DF_04_43_item           = SCAN memory sequential test and bypass logic check for chip level
DF_04_43_description    = The memory sequential test is doable, and memory bypass logic can be enabled when do not execute the memory sequential test.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_43_support        = no
DF_04_43_criteria       = 

DF_04_44_category       = SCAN
DF_04_44_owner          = DFT
DF_04_44_item           = Tail of scan out check
DF_04_44_description    = Check there is no negative FF connected scan out pin (e.g. OCC chain -> so).
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_44_support        = no
DF_04_44_criteria       = 

DF_04_45_category       = SCAN
DF_04_45_owner          = DFT
DF_04_45_item           = SCAN(DC) serial simulation @unit-delay for chip level
DF_04_45_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_45_support        = no
DF_04_45_criteria       = 

DF_04_46_category       = SCAN
DF_04_46_owner          = DFT
DF_04_46_item           = SCAN(DC) parallel simulation  @unit-delay for chip level
DF_04_46_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_46_support        = no
DF_04_46_criteria       = 

DF_04_47_category       = SCAN
DF_04_47_owner          = DFT
DF_04_47_item           = SCAN(AC) serial simulation @unit-delay for chip level
DF_04_47_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_47_support        = no
DF_04_47_criteria       = 

DF_04_48_category       = SCAN
DF_04_48_owner          = DFT
DF_04_48_item           = SCAN(AC) parallel simulation  @unit-delay for chip level
DF_04_48_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_48_support        = no
DF_04_48_criteria       = 

DF_04_49_category       = SCAN
DF_04_49_owner          = DFT
DF_04_49_item           = Formal verification (w/ SCAN VS w/o SCAN) for chip level
DF_04_49_description    = Check FV between pre-SCAN netlist and post-SCAN netlist can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : SCAN_MODE
DF_04_49_support        = no
DF_04_49_criteria       = 

DF_04_50_category       = SCAN
DF_04_50_owner          = DFT
DF_04_50_item           = SCAN timing constraint check for chip level (70pf I/O loading)
DF_04_50_description    = Check SCAN mode timing report is reasnoable and managable.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : SCAN_MODE
DF_04_50_support        = no
DF_04_50_criteria       = 

DF_04_51_category       = SCAN
DF_04_51_owner          = DFT
DF_04_51_item           = SCAN enable pin external AC timing check
DF_04_51_description    = The external AC timing for scan enable pin need to check. If it is added constant value for both scan shift and capture mode in SDCs, such timing cannot be checked.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : SCAN_MODE
DF_04_51_support        = no
DF_04_51_criteria       = 

DF_04_52_category       = SCAN
DF_04_52_owner          = DFT
DF_04_52_item           = SDF annotation check @worst corner for chip level
DF_04_52_description    = Check there is no error/warning when annotate SDF with worst corner.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : SCAN_MODE
DF_04_52_support        = no
DF_04_52_criteria       = 

DF_04_53_category       = SCAN
DF_04_53_owner          = DFT
DF_04_53_item           = SDF annotation check @best corner for chip level
DF_04_53_description    = Check there is no error/warning when annotate SDF with best corner.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : SCAN_MODE
DF_04_53_support        = no
DF_04_53_criteria       = 

DF_04_54_category       = SCAN
DF_04_54_owner          = DFT
DF_04_54_item           = SCAN(DC) serial simulation @SDF with worst corner for chip level
DF_04_54_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : SCAN_MODE
DF_04_54_support        = no
DF_04_54_criteria       = 

DF_04_65_category       = SCAN
DF_04_65_owner          = DFT
DF_04_65_item           = SCAN(DC) parallel simulation @SDF with worst corner for chip level
DF_04_65_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : SCAN_MODE
DF_04_65_support        = no
DF_04_65_criteria       = 

DF_04_55_category       = SCAN
DF_04_55_owner          = DFT
DF_04_55_item           = SCAN(DC) serial simulation @SDF with best corner for chip level
DF_04_55_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : SCAN_MODE
DF_04_55_support        = no
DF_04_55_criteria       = 

DF_04_66_category       = SCAN
DF_04_66_owner          = DFT
DF_04_66_item           = SCAN(DC) parallel simulation @SDF with best corner for chip level
DF_04_66_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : SCAN_MODE
DF_04_66_support        = no
DF_04_66_criteria       = 

DF_04_56_category       = SCAN
DF_04_56_owner          = DFT
DF_04_56_item           = SCAN(AC) serial simulation @SDF with worst corner for chip level
DF_04_56_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : SCAN_MODE
DF_04_56_support        = no
DF_04_56_criteria       = 

DF_04_67_category       = SCAN
DF_04_67_owner          = DFT
DF_04_67_item           = SCAN(AC) parallel simulation @SDF with worst corner for chip level
DF_04_67_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : SCAN_MODE
DF_04_67_support        = no
DF_04_67_criteria       = 

DF_04_57_category       = SCAN
DF_04_57_owner          = DFT
DF_04_57_item           = SCAN(AC) serial simulation @SDF with best corner for chip level
DF_04_57_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : SCAN_MODE
DF_04_57_support        = no
DF_04_57_criteria       = 

DF_04_68_category       = SCAN
DF_04_68_owner          = DFT
DF_04_68_item           = SCAN(AC) parallel simulation @SDF with best corner for chip level
DF_04_68_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : SCAN_MODE
DF_04_68_support        = no
DF_04_68_criteria       = 

DF_04_58_category       = SCAN
DF_04_58_owner          = DFT
DF_04_58_item           = SCAN test pattern generation
DF_04_58_description    = Check the feasibility of pattern generation and validate the release test pattern.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : SCAN_MODE
DF_04_58_support        = no
DF_04_58_criteria       = 

DF_05_01_category       = IODC
DF_05_01_owner          = DFT
DF_05_01_item           = IODC test implementation spec check for chip level
DF_05_01_description    = Clarify the implementation spec for IODC test. The implementation environment should be matched to DFT spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : IODC_MODE
DF_05_01_support        = no
DF_05_01_criteria       = 

DF_05_21_category       = IODC
DF_05_21_owner          = DFT
DF_05_21_item           = IODC test SDC spec check for chip level
DF_05_21_description    = Clarify the timing spec for IODC test. The timing constraints should be matched to SDC spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : IOIDC_MODE
                          Template:
                           (Project_name)_DFT_SDC_spec.xlsx
DF_05_21_support        = no
DF_05_21_criteria       = 

DF_05_02_category       = IODC
DF_05_02_owner          = DFT
DF_05_02_item           = IODC test mode setting check
DF_05_02_description    = Check a mode signal and related internal signals can be enabled.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : IODC_MODE
DF_05_02_support        = no
DF_05_02_criteria       = 

DF_05_03_category       = IODC
DF_05_03_owner          = DFT
DF_05_03_item           = IODC Insertion Log check for chip level
DF_05_03_description    = Check there is no fatal error/warning in log file when IODC inserion.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : IODC_MODE
DF_05_03_support        = no
DF_05_03_criteria       = 

DF_05_04_category       = IODC
DF_05_04_owner          = DFT
DF_05_04_item           = IODC pin assignment and chain order check
DF_05_04_description    = IODC pin assignment and chain order could be considered based on floorplan.
DF_05_04_support        = no
DF_05_04_criteria       = 

DF_05_05_category       = IODC
DF_05_05_owner          = DFT
DF_05_05_item           = IODC test control check
DF_05_05_description    = Check all IO control pins can be configurable (e.g. IE, E12, E6, SR, SMT, PU, PD). Also control of OEN and IE pin should be separated.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : IODC_MODE
DF_05_05_support        = no
DF_05_05_criteria       = 

DF_05_06_category       = IODC
DF_05_06_owner          = DFT
DF_05_06_item           = IODC test simulation @unit-delay for chip level
DF_05_06_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : IODC_MODE
DF_05_06_support        = no
DF_05_06_criteria       = 

DF_05_07_category       = IODC
DF_05_07_owner          = DFT
DF_05_07_item           = IODC test simulation with fault-injection @unit-delay for chip level
DF_05_07_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : IODC_MODE
DF_05_07_support        = no
DF_05_07_criteria       = 

DF_05_08_category       = IODC
DF_05_08_owner          = DFT
DF_05_08_item           = IODC timing constraint check for chip level (70pf I/O loading)
DF_05_08_description    = Check IODC test mode timing report is reasnoable and managable.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : IODC_MODE
DF_05_08_support        = no
DF_05_08_criteria       = 

DF_05_09_category       = IODC
DF_05_09_owner          = DFT
DF_05_09_item           = SDF annotation check @worst corner for chip level
DF_05_09_description    = Check there is no error/warning when annotate SDF with worst corner.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : IODC_MODE
DF_05_09_support        = no
DF_05_09_criteria       = 

DF_05_10_category       = IODC
DF_05_10_owner          = DFT
DF_05_10_item           = SDF annotation check @best corner for chip level
DF_05_10_description    = Check there is no error/warning when annotate SDF with best corner.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : IODC_MODE
DF_05_10_support        = no
DF_05_10_criteria       = 

DF_05_11_category       = IODC
DF_05_11_owner          = DFT
DF_05_11_item           = IODC test simulation @SDF with worst corner for chip level
DF_05_11_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : IODC_MODE
DF_05_11_support        = no
DF_05_11_criteria       = 

DF_05_12_category       = IODC
DF_05_12_owner          = DFT
DF_05_12_item           = IODC test simulation @SDF with best corner for chip level
DF_05_12_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : IODC_MODE
DF_05_12_support        = no
DF_05_12_criteria       = 

DF_05_13_category       = IODC
DF_05_13_owner          = DFT
DF_05_13_item           = IODC test pattern generation
DF_05_13_description    = Check the feasibility of pattern generation and validate the release test pattern.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : IODC_MODE
DF_05_13_support        = no
DF_05_13_criteria       = 

DF_06_01_category       = PLL
DF_06_01_owner          = DFT
DF_06_01_item           = PLL test implementation spec check for chip level
DF_06_01_description    = Clarify the implementation spec for PLL test. The implementation environment should be matched to DFT spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : PLL_MODE
DF_06_01_support        = no
DF_06_01_criteria       = 

DF_06_13_category       = PLL
DF_06_13_owner          = DFT
DF_06_13_item           = PLL test SDC spec check for chip level
DF_06_13_description    = Clarify the timing spec for PLL test. The timing constraints should be matched to SDC spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : PLL_MODE
                          Template:
                           (Project_name)_DFT_SDC_spec.xlsx
DF_06_13_support        = no
DF_06_13_criteria       = 

DF_06_02_category       = PLL
DF_06_02_owner          = DFT
DF_06_02_item           = PLL test mode setting check
DF_06_02_description    = Check a mode signal and related internal signals can be enabled.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : PLL_MODE
DF_06_02_support        = no
DF_06_02_criteria       = 

DF_06_03_category       = PLL
DF_06_03_owner          = DFT
DF_06_03_item           = PLL test control check
DF_06_03_description    = Check each PLL pin can be controlled to correct values (e.g. TIE, INT, EXT, -).
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : PLL_MODE
DF_06_03_support        = no
DF_06_03_criteria       = 

DF_06_04_category       = PLL
DF_06_04_owner          = DFT
DF_06_04_item           = PLL test simulation with bypass mode @unit-delay for chip level
DF_06_04_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : PLL_MODE
DF_06_04_support        = no
DF_06_04_criteria       = 

DF_06_05_category       = PLL
DF_06_05_owner          = DFT
DF_06_05_item           = PLL test simulation with normal speed (thru divider) @unit-delay for chip level
DF_06_05_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : PLL_MODE
DF_06_05_support        = no
DF_06_05_criteria       = 

DF_06_06_category       = PLL
DF_06_06_owner          = DFT
DF_06_06_item           = PLL test simulation with normal speed (not thru divider) @unit-delay for chip level
DF_06_06_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : PLL_MODE
DF_06_06_support        = no
DF_06_06_criteria       = 

DF_06_07_category       = PLL
DF_06_07_owner          = DFT
DF_06_07_item           = PLL Test timing constraint check for chip level (70pf I/O loading)
DF_06_07_description    = Check PLL test mode timing report is reasnoable and managable.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : PLL_MODE
DF_06_07_support        = no
DF_06_07_criteria       = 

DF_06_08_category       = PLL
DF_06_08_owner          = DFT
DF_06_08_item           = SDF annotation check @worst corner for chip level
DF_06_08_description    = Check there is no error/warning when annotate SDF with worst corner.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : PLL_MODE
DF_06_08_support        = no
DF_06_08_criteria       = 

DF_06_09_category       = PLL
DF_06_09_owner          = DFT
DF_06_09_item           = SDF annotation check @best corner for chip level
DF_06_09_description    = Check there is no error/warning when annotate SDF with best corner.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : PLL_MODE
DF_06_09_support        = no
DF_06_09_criteria       = 

DF_06_10_category       = PLL
DF_06_10_owner          = DFT
DF_06_10_item           = PLL test simulation @SDF with worst corner for chip level
DF_06_10_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : PLL_MODE
DF_06_10_support        = no
DF_06_10_criteria       = 

DF_06_11_category       = PLL
DF_06_11_owner          = DFT
DF_06_11_item           = PLL test simulation @SDF with best corner for chip level
DF_06_11_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : PLL_MODE
DF_06_11_support        = no
DF_06_11_criteria       = 

DF_06_12_category       = PLL
DF_06_12_owner          = DFT
DF_06_12_item           = PLL test pattern generation
DF_06_12_description    = Check the feasibility of pattern generation and validate the release test pattern.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : PLL_MODE
DF_06_12_support        = no
DF_06_12_criteria       = 

DF_07_01_category       = eFuse
DF_07_01_owner          = DFT
DF_07_01_item           = eFuse test implementation spec check for chip level
DF_07_01_description    = Clarify the implementation spec for eFuse test. The implementation environment should be matched to DFT spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : EFUSE_MODE
DF_07_01_support        = no
DF_07_01_criteria       = 

DF_07_08_category       = eFuse
DF_07_08_owner          = DFT
DF_07_08_item           = eFuse test SDC spec check for chip level
DF_07_08_description    = Clarify the timing spec for eFuse test. The timing constraints should be matched to SDC spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : EFUSE_MODE
                          Template:
                           (Project_name)_DFT_SDC_spec.xlsx
DF_07_08_support        = no
DF_07_08_criteria       = 

DF_07_02_category       = eFuse
DF_07_02_owner          = DFT
DF_07_02_item           = eFuse address mapping information check
DF_07_02_description    = Clarify the application and address mapping of eFuse using for CHIP-ID and so on.
DF_07_02_support        = no
DF_07_02_criteria       = 

DF_07_03_category       = eFuse
DF_07_03_owner          = DFT
DF_07_03_item           = eFuse test mode setting check
DF_07_03_description    = Check a mode signal and related internal signals can be enabled.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : EFUSE_MODE
DF_07_03_support        = no
DF_07_03_criteria       = 

DF_07_04_category       = eFuse
DF_07_04_owner          = DFT
DF_07_04_item           = eFuse test control check
DF_07_04_description    = Check each eFuse pin can be controlled to correct values (e.g. TIE, INT, EXT, -).
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : EFUSE_MODE
DF_07_04_support        = no
DF_07_04_criteria       = 

DF_07_05_category       = eFuse
DF_07_05_owner          = DFT
DF_07_05_item           = eFuse test simulation with PGM operation @unit-delay for chip level
DF_07_05_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : EFUSE_MODE
DF_07_05_support        = no
DF_07_05_criteria       = 

DF_07_06_category       = eFuse
DF_07_06_owner          = DFT
DF_07_06_item           = eFuse test simulation with READ operation @unit-delay for chip level
DF_07_06_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : EFUSE_MODE
DF_07_06_support        = no
DF_07_06_criteria       = 

DF_07_07_category       = eFuse
DF_07_07_owner          = DFT
DF_07_07_item           = eFuse test pattern generation
DF_07_07_description    = Check the feasibility of pattern generation and validate the release test pattern.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : EFUSE_MODE
DF_07_07_support        = no
DF_07_07_criteria       = 

DF_08_01_category       = PMC
DF_08_01_owner          = DFT
DF_08_01_item           = Process Monitor test implementation spec check for chip level
DF_08_01_description    = Clarify the implementation spec for PMC test. The implementation environment should be matched to DFT spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : PMC_MODE
DF_08_01_support        = no
DF_08_01_criteria       = 

DF_08_02_category       = PMC
DF_08_02_owner          = DFT
DF_08_02_item           = PMC test mode setting check
DF_08_02_description    = Check a mode signal and related internal signals can be enabled.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : PMC_MODE
DF_08_02_support        = no
DF_08_02_criteria       = 

DF_08_03_category       = PMC
DF_08_03_owner          = DFT
DF_08_03_item           = PMC test control check
DF_08_03_description    = Check each PMC pin can be controlled to correct values (e.g. TIE, INT, EXT, -).
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : PMC_MODE
DF_08_03_support        = no
DF_08_03_criteria       = 

DF_08_04_category       = PMC
DF_08_04_owner          = DFT
DF_08_04_item           = PMC monitor frequency measurement
DF_08_04_description    = Check PMC output can be monitored with expected frequency when run the logic simulation.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : PMC_MODE
DF_08_04_support        = no
DF_08_04_criteria       = 

DF_08_05_category       = PMC
DF_08_05_owner          = DFT
DF_08_05_item           = PMC test pattern generation
DF_08_05_description    = Check the feasibility of pattern generation and validate the release test pattern.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : PMC_MODE
DF_08_05_support        = no
DF_08_05_criteria       = 

DF_09_01_category       = BI/Aging
DF_09_01_owner          = DFT
DF_09_01_item           = BI/Aging test implementation spec check for chip level
DF_09_01_description    = Clarify the implementation spec for BurnIn/Aging test. The implementation environment should be matched to DFT spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : BI_MODE
DF_09_01_support        = no
DF_09_01_criteria       = 

DF_09_10_category       = BI/Aging
DF_09_10_owner          = DFT
DF_09_10_item           = BI/Aging test SDC spec check for chip level
DF_09_10_description    = Clarify the timing spec for BurnIn/Aging test. The timing constraints should be matched to SDC spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : BI_MODE
                          Template:
                           (Project_name)_DFT_SDC_spec.xlsx
DF_09_10_support        = no
DF_09_10_criteria       = 

DF_09_02_category       = BI/Aging
DF_09_02_owner          = DFT
DF_09_02_item           = BI/Aging test mode setting check
DF_09_02_description    = Check a mode signal and related internal signals can be enabled.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : BI_MODE
DF_09_02_support        = no
DF_09_02_criteria       = 

DF_09_03_category       = BI/Aging
DF_09_03_owner          = DFT
DF_09_03_item           = BI/Aging test simulation @unit-delay for chip level
DF_09_03_description    = Check the logic simulation with unit-delay can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : BI_MODE
DF_09_03_support        = no
DF_09_03_criteria       = 

DF_09_04_category       = BI/Aging
DF_09_04_owner          = DFT
DF_09_04_item           = BI/Aging Test timing constraint check for chip level (70pf I/O loading)
DF_09_04_description    = Check BI/Aging test mode timing report is reasnoable and managable.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : BI_MODE
DF_09_04_support        = no
DF_09_04_criteria       = 

DF_09_05_category       = BI/Aging
DF_09_05_owner          = DFT
DF_09_05_item           = SDF annotation check @worst corner for chip level
DF_09_05_description    = Check there is no error/warning when annotate SDF with worst corner.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : BI_MODE
DF_09_05_support        = no
DF_09_05_criteria       = 

DF_09_06_category       = BI/Aging
DF_09_06_owner          = DFT
DF_09_06_item           = SDF annotation check @best corner for chip level
DF_09_06_description    = Check there is no error/warning when annotate SDF with best corner.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : BI_MODE
DF_09_06_support        = no
DF_09_06_criteria       = 

DF_09_07_category       = BI/Aging
DF_09_07_owner          = DFT
DF_09_07_item           = BI/Aging test simulation @SDF with worst corner for chip level
DF_09_07_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : BI_MODE
DF_09_07_support        = no
DF_09_07_criteria       = 

DF_09_08_category       = BI/Aging
DF_09_08_owner          = DFT
DF_09_08_item           = BI/Aging test simulation @SDF with best corner for chip level
DF_09_08_description    = Check the logic simulation with SDF back-annotation can be passed.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : BI_MODE
DF_09_08_support        = no
DF_09_08_criteria       = 

DF_09_09_category       = BI/Aging
DF_09_09_owner          = DFT
DF_09_09_item           = BI/Aging test pattern generation
DF_09_09_description    = Check the feasibility of pattern generation and validate the release test pattern.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : BI_MODE
DF_09_09_support        = no
DF_09_09_criteria       = 

DF_10_01_category       = DDR
DF_10_01_owner          = DFT
DF_10_01_item           = DDR test implementation spec check for chip level
DF_10_01_description    = Clarify the implementation spec for DDR test. The implementation environment should be matched to DFT spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : DDR_MODE
DF_10_01_support        = no
DF_10_01_criteria       = 

DF_10_15_category       = DDR
DF_10_15_owner          = DFT
DF_10_15_item           = DDR test SDC spec check for chip level
DF_10_15_description    = Clarify the timing spec for DDR test. The timing constraints should be matched to SDC spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : DDR_MODE
                          Template:
                           (Project_name)_DFT_SDC_spec.xlsx
DF_10_15_support        = no
DF_10_15_criteria       = 

DF_10_02_category       = DDR
DF_10_02_owner          = DFT
DF_10_02_item           = DDR test mode setting check
DF_10_02_description    = Check a mode signal and related internal signals can be enabled.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : DDR_MODE
DF_10_02_support        = no
DF_10_02_criteria       = 

DF_10_03_category       = DDR
DF_10_03_owner          = DFT
DF_10_03_item           = DDR test control check
DF_10_03_description    = Check each DDR pin can be controlled to correct values (e.g. TIE, INT, EXT, -).
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : DDR_MODE
DF_10_03_support        = no
DF_10_03_criteria       = 

DF_10_04_category       = DDR
DF_10_04_owner          = DFT
DF_10_04_item           = DDR internal loopback test simulation @unit-delay for chip level
DF_10_04_description    = Check the logic simulation with unit-delay can be passed. The simulation should be w/o forcing any internal signal/clock.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : DDR_MODE
DF_10_04_support        = no
DF_10_04_criteria       = 

DF_10_05_category       = DDR
DF_10_05_owner          = DFT
DF_10_05_item           = DRAM test simulation (DDR-BOST) @unit-delay for chip level
DF_10_05_description    = Check the logic simulation with unit-delay can be passed. The simulation should be w/o forcing any internal signal/clock.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : DDR_MODE
DF_10_05_support        = no
DF_10_05_criteria       = 

DF_10_06_category       = DDR
DF_10_06_owner          = DFT
DF_10_06_item           = DDR DLL test simulation @unit-delay for chip level
DF_10_06_description    = Check the logic simulation with unit-delay can be passed. The simulation should be w/o forcing any internal signal/clock.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : DDR_MODE
DF_10_06_support        = no
DF_10_06_criteria       = 

DF_10_07_category       = DDR
DF_10_07_owner          = DFT
DF_10_07_item           = DDR PLL test simulation @unit-delay for chip level
DF_10_07_description    = Check the logic simulation with unit-delay can be passed. The simulation should be w/o forcing any internal signal/clock.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : DDR_MODE
DF_10_07_support        = no
DF_10_07_criteria       = 

DF_10_08_category       = DDR
DF_10_08_owner          = DFT
DF_10_08_item           = DDRIO test simulation such as VIL, VIH, VOL, VOH @unit-delay for chip level
DF_10_08_description    = Check the logic simulation with unit-delay can be passed. The simulation should be w/o forcing any internal signal/clock.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : DDR_MODE
DF_10_08_support        = no
DF_10_08_criteria       = 

DF_10_09_category       = DDR
DF_10_09_owner          = DFT
DF_10_09_item           = DDR Test timing constraint check for chip level (70pf I/O loading)
DF_10_09_description    = Check DDR test mode timing report is reasnoable and managable.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : DDR_MODE
DF_10_09_support        = no
DF_10_09_criteria       = 

DF_10_10_category       = DDR
DF_10_10_owner          = DFT
DF_10_10_item           = SDF annotation check @worst corner for chip level
DF_10_10_description    = Check there is no error/warning when annotate SDF with worst corner.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : DDR_MODE
DF_10_10_support        = no
DF_10_10_criteria       = 

DF_10_11_category       = DDR
DF_10_11_owner          = DFT
DF_10_11_item           = SDF annotation check @best corner for chip level
DF_10_11_description    = Check there is no error/warning when annotate SDF with best corner.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : DDR_MODE
DF_10_11_support        = no
DF_10_11_criteria       = 

DF_10_12_category       = DDR
DF_10_12_owner          = DFT
DF_10_12_item           = DDR test simulation @SDF with worst corner for chip level
DF_10_12_description    = Check the logic simulation with SDF back-annotation can be passed. The simulation should be w/o forcing any internal signal/clock.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : DDR_MODE
DF_10_12_support        = no
DF_10_12_criteria       = 

DF_10_13_category       = DDR
DF_10_13_owner          = DFT
DF_10_13_item           = DDR test simulation @SDF with best corner for chip level
DF_10_13_description    = Check the logic simulation with SDF back-annotation can be passed. The simulation should be w/o forcing any internal signal/clock.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : DDR_MODE
DF_10_13_support        = no
DF_10_13_criteria       = 

DF_10_14_category       = DDR
DF_10_14_owner          = DFT
DF_10_14_item           = DDR test pattern generation
DF_10_14_description    = Check the feasibility of pattern generation and validate the release test pattern.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : DDR_MODE
DF_10_14_support        = no
DF_10_14_criteria       = 

DF_11_01_category       = IP(XXX)
DF_11_01_owner          = DFT
DF_11_01_item           = IP test implementation spec check for chip level
DF_11_01_description    = Clarify the implementation spec for IP test. The implementation environment should be matched to DFT spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : IP_MODE
DF_11_01_support        = no
DF_11_01_criteria       = 

DF_11_21_category       = IP(XXX)
DF_11_21_owner          = DFT
DF_11_21_item           = IP test SDC spec check for chip level
DF_11_21_description    = Clarify the timing spec for IP test. The timing constraints should be matched to SDC spec document.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : IP_MODE
                          Template:
                           (Project_name)_DFT_SDC_spec.xlsx
DF_11_21_support        = no
DF_11_21_criteria       = 

DF_11_02_category       = IP(XXX)
DF_11_02_owner          = DFT
DF_11_02_item           = IP test mode setting check
DF_11_02_description    = Check a mode signal and related internal signals can be enabled.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : IP_MODE
DF_11_02_support        = no
DF_11_02_criteria       = 

DF_11_03_category       = IP(XXX)
DF_11_03_owner          = DFT
DF_11_03_item           = IP test control check
DF_11_03_description    = Check each IP pin can be controlled to correct values (e.g. TIE, INT, EXT, -).
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : IP_MODE
DF_11_03_support        = no
DF_11_03_criteria       = 

DF_11_04_category       = IP(XXX)
DF_11_04_owner          = DFT
DF_11_04_item           = IP test simulation @unit-delay for chip level
DF_11_04_description    = Check the logic simulation with unit-delay can be passed. The simulation should be w/o forcing any internal signal/clock.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout
                           *Mode : IP_MODE
DF_11_04_support        = no
DF_11_04_criteria       = 

DF_11_05_category       = IP(XXX)
DF_11_05_owner          = DFT
DF_11_05_item           = IP Test timing constraint check for chip level (70pf I/O loading)
DF_11_05_description    = Check IP test mode timing report is reasnoable and managable.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : IP_MODE
DF_11_05_support        = no
DF_11_05_criteria       = 

DF_11_06_category       = IP(XXX)
DF_11_06_owner          = DFT
DF_11_06_item           = SDF annotation check @worst corner for chip level
DF_11_06_description    = Check there is no error/warning when annotate SDF with worst corner.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : IP_MODE
DF_11_06_support        = no
DF_11_06_criteria       = 

DF_11_07_category       = IP(XXX)
DF_11_07_owner          = DFT
DF_11_07_item           = SDF annotation check @best corner for chip level
DF_11_07_description    = Check there is no error/warning when annotate SDF with best corner.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & best corner SDF
                           *Mode : IP_MODE
DF_11_07_support        = no
DF_11_07_criteria       = 

DF_11_08_category       = IP(XXX)
DF_11_08_owner          = DFT
DF_11_08_item           = IP test simulation @SDF with worst corner for chip level
DF_11_08_description    = Check the logic simulation with SDF back-annotation can be passed. The simulation should be w/o forcing any internal signal/clock.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout & worst corner SDF
                           *Mode : IP_MODE
DF_11_08_support        = no
DF_11_08_criteria       = 

DF_11_09_category       = IP(XXX)
DF_11_09_owner          = DFT
DF_11_09_item           = IP test simulation @SDF with best corner for chip level
DF_11_09_description    = Check the logic simulation with SDF back-annotation can be passed. The simulation should be w/o forcing any internal signal/clock.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : pre-layout & worst corner SDF
                           *Mode : IP_MODE
DF_11_09_support        = no
DF_11_09_criteria       = 

DF_11_10_category       = IP(XXX)
DF_11_10_owner          = DFT
DF_11_10_item           = IP test pattern generation
DF_11_10_description    = Check the feasibility of pattern generation and validate the release test pattern.
                          Check Condition:
                           *Level : chip-level
                           *Netlist : post-layout
                           *Mode : IP_MODE
DF_11_10_support        = no
DF_11_10_criteria       = 


################################################
# STA                                          #
################################################

ST_01_01_category       = STA Env. Setup
ST_01_01_owner          = DE
ST_01_01_item           = Timing signoff corners
ST_01_01_description    = Summarize all signoff corner setting
ST_01_01_support        = 
ST_01_01_criteria       = 

ST_01_02_category       = STA Env. Setup
ST_01_02_owner          = DE
ST_01_02_item           = Timing derating(OCV/AOCV) + CRPR
ST_01_02_description    = Summarize all signoff derating value
ST_01_02_support        = 
ST_01_02_criteria       = 

ST_01_03_category       = STA Env. Setup
ST_01_03_owner          = DE
ST_01_03_item           = Clock uncertainty
ST_01_03_description    = Summarize uncertainty for each PLL/clock domain.
ST_01_03_support        = 
ST_01_03_criteria       = 

ST_01_04_category       = STA Env. Setup
ST_01_04_owner          = DE
ST_01_04_item           = Library check
ST_01_04_description    = Check to use correct library for STA
ST_01_04_support        = 
ST_01_04_criteria       = 

ST_01_05_category       = STA Env. Setup
ST_01_05_owner          = DE
ST_01_05_item           = STA variable and setting check
ST_01_05_description    = Check STA printvar report to see PT variables are correctly used
ST_01_05_support        = 
ST_01_05_criteria       = 

ST_01_06_category       = STA Env. Setup
ST_01_06_owner          = DE
ST_01_06_item           = STAR-RC evrionment check
ST_01_06_description    = Check STAR-RC script setting
ST_01_06_support        = 
ST_01_06_criteria       = 

ST_01_07_category       = STA Env. Setup
ST_01_07_owner          = DE
ST_01_07_item           = PrimeTime STA run setup
ST_01_07_description    = Complete to setup PrimeTime STA run set, to run under ALL required timing corners with correct margin settings
ST_01_07_support        = 
ST_01_07_criteria       = 

ST_02_01_category       = STA
ST_02_01_owner          = DE
ST_02_01_item           = Chip level input transition
ST_02_01_description    = Define the appropriate chip level input waveform for delay calculation.
ST_02_01_support        = 
ST_02_01_criteria       = 

ST_02_02_category       = STA
ST_02_02_owner          = DE
ST_02_02_item           = Chip level output loading
ST_02_02_description    = Define the appropriate chip level output loading for delay calculation.
ST_02_02_support        = 
ST_02_02_criteria       = 

ST_02_03_category       = STA
ST_02_03_owner          = DE
ST_02_03_item           = AC timing check
ST_02_03_description    = Make sure the AC timing could achieve the system AC specifications.
                          AC timing sign-off is to be different design by design. Clearly report what the requirement is, how to check, and how the result is.
ST_02_03_support        = 
ST_02_03_criteria       = 

ST_02_04_category       = STA
ST_02_04_owner          = DE
ST_02_04_item           = System-mode STA
ST_02_04_description    = Meet timing requirement for System-mode. System-mode(s) need to be defined by the customer discussion
ST_02_04_support        = 
ST_02_04_criteria       = 

ST_02_05_category       = STA
ST_02_05_owner          = DE
ST_02_05_item           = Test-mode STA
ST_02_05_description    = Meet timing requirement for Test-mode. Test-mode(s) need to be defined by internal DFT team discussion
ST_02_05_support        = 
ST_02_05_criteria       = 

ST_02_06_category       = STA
ST_02_06_owner          = DE
ST_02_06_item           = Meta-stablity
ST_02_06_description    = Avoid the reliability failure due to the meta-stablility characteristic issue. Calculate the MTBF for the target async-FF to make sure that it is enough long
ST_02_06_support        = 
ST_02_06_criteria       = 

ST_02_07_category       = STA
ST_02_07_owner          = DE
ST_02_07_item           = Meta-stablity
ST_02_07_description    = Avoid the reliability failure due to the meta-stablility characteristic issue. Place the target async-FFs close each other
ST_02_07_support        = 
ST_02_07_criteria       = 

ST_02_08_category       = STA
ST_02_08_owner          = DE
ST_02_08_item           = All STA timing constraint
ST_02_08_description    = Not only setup/hold timing check, need to check all timing constraint including min_period/sequential_clock_pulse_width/clock_tree_pulse_width/recovery/removal/etc. by using 'report_constraint' command in PrimeTime
ST_02_08_support        = 
ST_02_08_criteria       = 

ST_02_09_category       = STA
ST_02_09_owner          = DE
ST_02_09_item           = RC extraction variable and setting check
ST_02_09_description    = Correct StarRC variable/setting is needed.
ST_02_09_support        = 
ST_02_09_criteria       = 

ST_02_10_category       = STA
ST_02_10_owner          = DE
ST_02_10_item           = Delay cell chain
ST_02_10_description    = To expect the good duty-cycle, delay cell should not be chained more than the certain stage#. If it becomes over that, insert 2 inverters in between the groups of chains
ST_02_10_support        = 
ST_02_10_criteria       = 

ST_02_11_category       = STA
ST_02_11_owner          = DE
ST_02_11_item           = PrimeTime UITE480 warning
ST_02_11_description    = In PBA mode STA, need to make sure that there is NO UITE480 PrimeTime warning message, to avoid to overlook the true timing violations
ST_02_11_support        = 
ST_02_11_criteria       = 

ST_02_12_category       = STA
ST_02_12_owner          = DE
ST_02_12_item           = DFM via impact
ST_02_12_description    = Include DFM via timing impact for STA. DFM via optimize needs to be performed before runnin RC-extraction
ST_02_12_support        = 
ST_02_12_criteria       = 

ST_02_13_category       = STA
ST_02_13_owner          = DE
ST_02_13_item           = Dummy metal impact
ST_02_13_description    = Include dummy metal timing impact for STA. Dummy metal insertion needs to be performed before runnin RC-extraction
ST_02_13_support        = 
ST_02_13_criteria       = 

ST_02_14_category       = STA
ST_02_14_owner          = DE
ST_02_14_item           = PLL jitter margin
ST_02_14_description    = PLL jitter margin needs to be defined based on the PLL spec
ST_02_14_support        = 
ST_02_14_criteria       = 

ST_02_15_category       = STA
ST_02_15_owner          = DE
ST_02_15_item           = Hard IP Netlist/SPEF
ST_02_15_description    = When the hard IP is hardened by the customer/vendor, need to read the netlist/spef for timing verification. Especially in case the model (.lib) characteristic is not accurate.
ST_02_15_support        = 
ST_02_15_criteria       = 

ST_02_16_category       = STA
ST_02_16_owner          = DE
ST_02_16_item           = SPEF annotation
ST_02_16_description    = Make sure RC annotated on all nets.
ST_02_16_support        = 
ST_02_16_criteria       = 

ST_02_17_category       = STA
ST_02_17_owner          = DE
ST_02_17_item           = SDF annotation (SDF flow only)
ST_02_17_description    = Make sure delay annotated on all cels/nets.
ST_02_17_support        = 
ST_02_17_criteria       = 


################################################
# Low Power                                    #
################################################

LP_01_01_category       = Low Power
LP_01_01_owner          = DE
LP_01_01_item           = Power domain definition
LP_01_01_description    = Define all power domain and power spec with instance
LP_01_01_support        = no
LP_01_01_criteria       = 

LP_01_02_category       = Low Power
LP_01_02_owner          = DE
LP_01_02_item           = STATETABLE for all power domain
LP_01_02_description    = Define all power mode with STATETABLE
LP_01_02_support        = no
LP_01_02_criteria       = 

LP_01_03_category       = Low Power
LP_01_03_owner          = DE
LP_01_03_item           = Peripheral/Area-based type
LP_01_03_description    = Define which type is used for each power domain
LP_01_03_support        = no
LP_01_03_criteria       = 

LP_01_04_category       = Low Power
LP_01_04_owner          = DE
LP_01_04_item           = PMU spec. check
LP_01_04_description    = Define PMU (Power Management Unit) spec
LP_01_04_support        = no
LP_01_04_criteria       = 

LP_01_05_category       = Low Power
LP_01_05_owner          = DE
LP_01_05_item           = UPF, CPF  check
LP_01_05_description    = Verify UPF or CPF description
LP_01_05_support        = no
LP_01_05_criteria       = 

LP_01_06_category       = Low Power
LP_01_06_owner          = DE
LP_01_06_item           = Verification check items
LP_01_06_description    = Define which items we should check
LP_01_06_support        = no
LP_01_06_criteria       = 

LP_01_07_category       = Low Power
LP_01_07_owner          = DE
LP_01_07_item           = Low power verification result
LP_01_07_description    = Check Low power verification result
LP_01_07_support        = no
LP_01_07_criteria       = 


################################################
# SIPI                                         #
################################################

SI_01_01_category       = Basic check
SI_01_01_owner          = SIPI
SI_01_01_item           = Bump/Ball check with SI
SI_01_01_description    = Bump/ball map design data information
SI_01_01_support        = no
SI_01_01_criteria       = 

SI_02_01_category       = PI
SI_02_01_owner          = SIPI
SI_02_01_item           = PI :DC
SI_02_01_description    = DC IR-drop
SI_02_01_support        = no
SI_02_01_criteria       = 

SI_02_02_category       = PI
SI_02_02_owner          = SIPI
SI_02_02_item           = PI :AC
SI_02_02_description    = PI PDN
SI_02_02_support        = no
SI_02_02_criteria       = 

SI_02_03_category       = SI
SI_02_03_owner          = SIPI
SI_02_03_item           = Frequency domain
SI_02_03_description    = Model checking
SI_02_03_support        = no
SI_02_03_criteria       = 

SI_02_04_category       = SI
SI_02_04_owner          = SIPI
SI_02_04_item           = Timing domain
SI_02_04_description    = EYE diagram/ Set, Hold time/Timing
SI_02_04_support        = no
SI_02_04_criteria       = 


################################################
# Package                                      #
################################################

PG_01_01_category       = Package
PG_01_01_owner          = APE
PG_01_01_item           = Checking if the thermal simulation condtion is clear
PG_01_01_description    = Package type/air-flow/material/Ta, Tj, Power, System condtion/etc.
PG_01_01_support        = no
PG_01_01_criteria       = 

PG_01_02_category       = Package
PG_01_02_owner          = APE
PG_01_02_item           = POD (Package Outline Drawing)
PG_01_02_description    = Create the POD and agreed with the customer
PG_01_02_support        = no
PG_01_02_criteria       = 

PG_01_03_category       = Package
PG_01_03_owner          = APE
PG_01_03_item           = Checking if the pinlist is final ?
PG_01_03_description    = 1.Confirm with PM/DE
                          2.attached the pinlist
PG_01_03_support        = no
PG_01_03_criteria       = 

PG_01_04_category       = Package
PG_01_04_owner          = APE
PG_01_04_item           = Checking if Package Type, Body Size, Ball Pitch are correct ?
PG_01_04_description    = 1.confirm all SPEC meets project SPEC
                          2. attached POD
PG_01_04_support        = no
PG_01_04_criteria       = 

PG_01_05_category       = Package
PG_01_05_owner          = APE
PG_01_05_item           = Checking if Substrate layer count & material are correct ?
PG_01_05_description    = 1. confirm Sustrate SPEC
                          2. attach the SBS stack up
PG_01_05_support        = no
PG_01_05_criteria       = 

PG_01_06_category       = Package
PG_01_06_owner          = APE
PG_01_06_item           = Checking if bump coodinate, pin name &  ball map on Substrate are the same as pinlist ?
PG_01_06_description    = 1. doing the comparison between
                              pinlist & data from mcm
                          2. attach the comparison report
PG_01_06_support        = no
PG_01_06_criteria       = 

PG_01_07_category       = Package
PG_01_07_owner          = APE
PG_01_07_item           = Checking if the routing guideline is correct ?
PG_01_07_description    = 1. Checking SBS stack up
                          2.Checking Impedance rule
                          3.Checking if any rule is not clear
PG_01_07_support        = no
PG_01_07_criteria       = 

PG_01_08_category       = Package
PG_01_08_owner          = APE
PG_01_08_item           = Checking if all routing meets SIPIs Routing guideline
                          (Impedance & skew control)
PG_01_08_description    = 1. checking if the routing meets the
                               SIPI routing guideline
                          2. attach the checking result report
PG_01_08_support        = no
PG_01_08_criteria       = 

PG_01_09_category       = Package
PG_01_09_owner          = SIPI
PG_01_09_item           = Checking if SIPI simulation result meets SPEC
                          (Report from SIPI team)
PG_01_09_description    = 1.Report from SIPI team
PG_01_09_support        = no
PG_01_09_criteria       = 

PG_01_10_category       = Package
PG_01_10_owner          = APE
PG_01_10_item           = Checking if thermal simulation result meets SPEC
PG_01_10_description    = 1.checking if thermal simulation result meets SPEC
                          2. Attached the simulation report
PG_01_10_support        = no
PG_01_10_criteria       = 

PG_01_11_category       = Package
PG_01_11_owner          = APE
PG_01_11_item           = POD, pinlist approval letter
PG_01_11_description    = 1.checking if getting customer approval
                          2. attached the approval letter
PG_01_11_support        = no
PG_01_11_criteria       = 

PG_01_12_category       = Package
PG_01_12_owner          = APE
PG_01_12_item           = ES BOM
PG_01_12_description    = 1.checking if getting PM approval
                          2. attached the ES BOM
PG_01_12_support        = no
PG_01_12_criteria       = 

PG_01_13_category       = Package
PG_01_13_owner          = APE
PG_01_13_item           = ES Marking
PG_01_13_description    = 1.checking if getting customer & PM approval
                          2. attached the ES Marking
PG_01_13_support        = no
PG_01_13_criteria       = 


################################################
# Generic                                      #
################################################

GE_01_01_category       = Design Statistic
GE_01_01_owner          = DE
GE_01_01_item           = Chip size
GE_01_01_description    = Final chip size (@silicon scribe center)
GE_01_01_support        = no
GE_01_01_criteria       = 

GE_01_02_category       = Design Statistic
GE_01_02_owner          = DE
GE_01_02_item           = Chip size
GE_01_02_description    = Final chip size (@GDS die-edge)
GE_01_02_support        = 
GE_01_02_criteria       = 

GE_01_03_category       = Design Statistic
GE_01_03_owner          = DE
GE_01_03_item           = Logic gate size [Mgate]
GE_01_03_description    = Synthesis netlist
GE_01_03_support        = 
GE_01_03_criteria       = 

GE_01_04_category       = Design Statistic
GE_01_04_owner          = DE
GE_01_04_item           = Logic gate size [Mgate]
GE_01_04_description    = Post-DFT netlist
GE_01_04_support        = 
GE_01_04_criteria       = 

GE_01_05_category       = Design Statistic
GE_01_05_owner          = DE
GE_01_05_item           = Logic gate size [Mgate]
GE_01_05_description    = Post-Layout netlist (Final)
GE_01_05_support        = 
GE_01_05_criteria       = 

GE_01_06_category       = Design Statistic
GE_01_06_owner          = DE
GE_01_06_item           = S/C area-ratio of each VTH cells
GE_01_06_description    = Post-Layout netlist (Final)
                          ex. SLVT/LVT/SVT-4nm/SVT/SVT+3nm/HVT
GE_01_06_support        = 
GE_01_06_criteria       = 

GE_02_01_category       = Netlist
GE_02_01_owner          = DE
GE_02_01_item           = Preserve all logic hierarchies
GE_02_01_description    = Check the 'module' definitions in both original and layout netlist
GE_02_01_support        = 
GE_02_01_criteria       = 

GE_02_02_category       = Netlist
GE_02_02_owner          = DE
GE_02_02_item           = No open input
GE_02_02_description    = No open gate to avoid the electric failure
GE_02_02_support        = 
GE_02_02_criteria       = 

GE_02_03_category       = Netlist
GE_02_03_owner          = DE
GE_02_03_item           = No multi-drive
GE_02_03_description    = No open gate to avoid the electric failure
GE_02_03_support        = 
GE_02_03_criteria       = 

GE_02_04_category       = Netlist
GE_02_04_owner          = DE
GE_02_04_item           = Tie-low/high connection
GE_02_04_description    = Avoid direct connection to global power/ground nets
GE_02_04_support        = 
GE_02_04_criteria       = 

GE_02_05_category       = Netlist
GE_02_05_owner          = DE
GE_02_05_item           = No assign statement
GE_02_05_description    = NO assign statement in netlist
GE_02_05_support        = 
GE_02_05_criteria       = 

GE_02_06_category       = Netlist
GE_02_06_owner          = DE
GE_02_06_item           = Keep the specific instances
GE_02_06_description    = The specific instances (size_only cells) need to be preserved
GE_02_06_support        = 
GE_02_06_criteria       = 

GE_02_07_category       = Netlist
GE_02_07_owner          = DE
GE_02_07_item           = Keep the specific instances cell type
GE_02_07_description    = The specific instances need to be preserved as the specific cell type
GE_02_07_support        = 
GE_02_07_criteria       = 

GE_02_08_category       = Netlist
GE_02_08_owner          = DE
GE_02_08_item           = Keep the specific nets
GE_02_08_description    = Keep original connection and NO buffers allowed on specific nets
GE_02_08_support        = 
GE_02_08_criteria       = 

GE_02_09_category       = Netlist
GE_02_09_owner          = DE
GE_02_09_item           = No high-drive cell
GE_02_09_description    = Check the high-drive cell types (Except fishbone or intentional multi-drive nets)
GE_02_09_support        = 
GE_02_09_criteria       = 

GE_02_10_category       = Netlist
GE_02_10_owner          = DE
GE_02_10_item           = No weak-drive cell
GE_02_10_description    = Check the low-drive cell type
GE_02_10_support        = 
GE_02_10_criteria       = 

GE_02_11_category       = Netlist
GE_02_11_owner          = DE
GE_02_11_item           = No back-slash
GE_02_11_description    = NO back-slash is allowed on netlist instance or port names
GE_02_11_support        = 
GE_02_11_criteria       = 

GE_02_12_category       = Netlist
GE_02_12_owner          = DE
GE_02_12_item           = Tie-high/low cell max fanout
GE_02_12_description    = Each tie-high/low cell fanout needs to be less than specific number
GE_02_12_support        = 
GE_02_12_criteria       = 

GE_02_13_category       = Netlist
GE_02_13_owner          = DE
GE_02_13_item           = Delay cell type check
GE_02_13_description    = NO allow the specific type of delay cells
GE_02_13_support        = 
GE_02_13_criteria       = 

GE_02_14_category       = Netlist
GE_02_14_owner          = DE
GE_02_14_item           = Don not use the specific type cells
GE_02_14_description    = NO allow the specific type of cells for synthesis/dft
GE_02_14_support        = 
GE_02_14_criteria       = 

GE_02_15_category       = Netlist
GE_02_15_owner          = DE
GE_02_15_item           = Don not use the specific type cells
GE_02_15_description    = NO allow the specific type of cells for physical-synthesis
GE_02_15_support        = 
GE_02_15_criteria       = 

GE_02_16_category       = Netlist
GE_02_16_owner          = DE
GE_02_16_item           = Don not use the specific type cells
GE_02_16_description    = NO allow the specific type of cells for final layout
GE_02_16_support        = 
GE_02_16_criteria       = 

GE_03_01_category       = FV
GE_03_01_owner          = DE
GE_03_01_item           = Logic equivalence check
GE_03_01_description    = RTL vs synthesis netlist
GE_03_01_support        = 
GE_03_01_criteria       = 

GE_03_02_category       = FV
GE_03_02_owner          = DE
GE_03_02_item           = Logic equivalence check
GE_03_02_description    = Synthesis netlist vs. Post-DFT netlist (disable DFT logic)
GE_03_02_support        = 
GE_03_02_criteria       = 

GE_03_03_category       = FV
GE_03_03_owner          = DE
GE_03_03_item           = Logic equivalence check
GE_03_03_description    = Post-DFT netlist vs. Post-Layout netlist (NO disable any logic)
GE_03_03_support        = 
GE_03_03_criteria       = 

GE_03_04_category       = FV
GE_03_04_owner          = DE
GE_03_04_item           = Logic equivalence check
GE_03_04_description    = Synthesis netlist vs. Post-Layout netlist (disable DFT logic)
GE_03_04_support        = 
GE_03_04_criteria       = 

GE_03_05_category       = FV
GE_03_05_owner          = DE
GE_03_05_item           = FV variables and setting check
GE_03_05_description    = Correct FV variable/setting is needed
GE_03_05_support        = 
GE_03_05_criteria       = 

GE_03_06_category       = FV
GE_03_06_owner          = DE
GE_03_06_item           = FV don’t verify setting
GE_03_06_description    = Make sure that all the don’t verify settings are correct
GE_03_06_support        = 
GE_03_06_criteria       = 

GE_03_07_category       = FV
GE_03_07_owner          = DE
GE_03_07_item           = Unmatched point check
GE_03_07_description    = * Confirm no unmatched point in 'REFERENCE' design.
                          * Between customer golden netlist and final layout netlist, confirm unmatched points in implementation design are all DFT circuits.
                          * Confirm if no non-standard cell (for ex, IO) in unmatched point reports.
                          * This is the new check-item added based on Sony J-CHIP experience
GE_03_07_support        = 
GE_03_07_criteria       = 

GE_03_08_category       = FV
GE_03_08_owner          = DE
GE_03_08_item           = set_user_match
GE_03_08_description    = * Make sure set_user_match is really correctly used if it is really necessary
                          * This is the new check-item added based on Sony J-CHIP experience
GE_03_08_support        = 
GE_03_08_criteria       = 

GE_03_09_category       = FV
GE_03_09_owner          = DE
GE_03_09_item           = Golden verification netlist
GE_03_09_description    = * Do NOT change the golden final netlist for each individual verifications. For DFT simulation, PV, STA,,, only single netlist needs to be used same as FV. Only in case you really need to change something for the special reason, describe it clearly
                          * This is the new check-item added based on Sony J-CHIP experience
GE_03_09_support        = 
GE_03_09_criteria       = 

GE_04_01_category       = P&R
GE_04_01_owner          = DE
GE_04_01_item           = Via size for power rail routing
GE_04_01_description    = Add enough size of via on the standard cell power rail routing
GE_04_01_support        = 
GE_04_01_criteria       = 

GE_04_02_category       = P&R
GE_04_02_owner          = DE
GE_04_02_item           = Decap cell
GE_04_02_description    = Add the enough number of decap cells in core logic area
GE_04_02_support        = 
GE_04_02_criteria       = 

GE_04_03_category       = P&R
GE_04_03_owner          = DE
GE_04_03_item           = ECO cell
GE_04_03_description    = Add the enough number of ECO cells in core logic area
GE_04_03_support        = 
GE_04_03_criteria       = 

GE_04_04_category       = P&R
GE_04_04_owner          = DE
GE_04_04_item           = End-Cap (boundary) cell
GE_04_04_description    = Add end-cap (boundary) cells correctly
GE_04_04_support        = 
GE_04_04_criteria       = 

GE_04_05_category       = P&R
GE_04_05_owner          = DE
GE_04_05_item           = Tap cell
GE_04_05_description    = Add Tap cells correctly
GE_04_05_support        = 
GE_04_05_criteria       = 

GE_04_06_category       = P&R
GE_04_06_owner          = DE
GE_04_06_item           = Avoid parallel routing at block boundary
GE_04_06_description    = Create route guide to keep parallel wires away from block boundary for chip level routing.
GE_04_06_support        = 
GE_04_06_criteria       = 

GE_04_07_category       = P&R
GE_04_07_owner          = DE
GE_04_07_item           = Add isolation buffers on physical partitioned blocks
GE_04_07_description    = Add the specified type of isolation buffers on all the boundary nets inside the physical paritioned blocks. Clock nets need the special considerations
GE_04_07_support        = 
GE_04_07_criteria       = 

GE_04_08_category       = P&R
GE_04_08_owner          = DE
GE_04_08_item           = Add alchip own decap cells around high speed IP
GE_04_08_description    = Add custom decap to expect bigger capacitance with the smaller area, to the special high-speed IP.
GE_04_08_support        = 
GE_04_08_criteria       = 

GE_04_09_category       = P&R
GE_04_09_owner          = DE
GE_04_09_item           = No object outside of the die area
GE_04_09_description    = Do NOT allow to have any object outside of the die area.
GE_04_09_support        = 
GE_04_09_criteria       = 

GE_04_10_category       = P&R
GE_04_10_owner          = DE
GE_04_10_item           = Chip logo
GE_04_10_description    = Insert the chip logo at the certain chip location (ex. Lower-left corner)
                          It is sometimes must needed to indicate the chip rotation correctly. Have to check with package team.
GE_04_10_support        = no
GE_04_10_criteria       = 

GE_04_11_category       = P&R
GE_04_11_owner          = DE
GE_04_11_item           = Reserve the sealring spacing
GE_04_11_description    = Reserve the sealring spacing at the chip boundary area
GE_04_11_support        = no
GE_04_11_criteria       = 

GE_04_12_category       = P&R
GE_04_12_owner          = DE
GE_04_12_item           = Import verilog model for IP in P&R tool
GE_04_12_description    = When importing the netlist into P&R tool, need to define the verilog model for IPs together to be imported, to avoid the fatal bus ordering mismatch
GE_04_12_support        = 
GE_04_12_criteria       = 

GE_04_13_category       = P&R
GE_04_13_owner          = DE
GE_04_13_item           = Memory macro orientation
GE_04_13_description    = In certain process technology, SRAM macros can not be rotated, all need to be in the certain direction
GE_04_13_support        = 
GE_04_13_criteria       = 

GE_04_14_category       = P&R
GE_04_14_owner          = DE
GE_04_14_item           = PCLAMP cell PG connection
GE_04_14_description    = All the pins on PCLAMP need the strong connection to the target power/ground wires with the wide-wire (similar or wider than pin width) and large array via
GE_04_14_support        = 
GE_04_14_criteria       = 

GE_04_15_category       = P&R
GE_04_15_owner          = DE
GE_04_15_item           = Memory macro power stripe connection
GE_04_15_description    = Memory macro power/ground ALL ports need to have the connection to the power/ground stripes. The port & stripe intersection need to be more than the target ratio against the port length.
GE_04_15_support        = 
GE_04_15_criteria       = 

GE_04_16_category       = P&R
GE_04_16_owner          = DE
GE_04_16_item           = Avoid too close cell placement at block boundary
GE_04_16_description    = Create placement blockage to keep any cells away from block boundary to reserve the enough spacing between top and lower blocks. And check the spacing.
GE_04_16_support        = 
GE_04_16_criteria       = 

GE_04_17_category       = P&R
GE_04_17_owner          = DE
GE_04_17_item           = Add isolation buffers on IP digital pins
GE_04_17_description    = Add the specified type of isolation buffers on all the IP digital pins. Clock nets need the special considerations
GE_04_17_support        = 
GE_04_17_criteria       = 

GE_04_18_category       = P&R
GE_04_18_owner          = DE
GE_04_18_item           = Distance between port and isolation buffers
GE_04_18_description    = Isolation buffers need to be placed close enough to the target
GE_04_18_support        = 
GE_04_18_criteria       = 

GE_04_19_category       = P&R
GE_04_19_owner          = DE
GE_04_19_item           = Distance between IP digital pins and isolation buffers
GE_04_19_description    = Isolation buffers need to be placed close enough to the target
GE_04_19_support        = 
GE_04_19_criteria       = 

GE_04_20_category       = P&R
GE_04_20_owner          = DE
GE_04_20_item           = Filler  cell
GE_04_20_description    = Add the Filler cells in core logic empty area
GE_04_20_support        = 
GE_04_20_criteria       = 

GE_05_01_category       = Logical DRC
GE_05_01_owner          = DE
GE_05_01_item           = Meet max_capacitance
GE_05_01_description    = Need to satisfy max_capacitance requirement define in .lib & user defined max_capacitance constraint
GE_05_01_support        = 
GE_05_01_criteria       = 

GE_05_02_category       = Logical DRC
GE_05_02_owner          = DE
GE_05_02_item           = Meet max transition (data)
GE_05_02_description    = Need to satisfy max_transistion requirement define in .lib & user defined max_transition constraint for data paths
GE_05_02_support        = 
GE_05_02_criteria       = 

GE_05_03_category       = Logical DRC
GE_05_03_owner          = DE
GE_05_03_item           = Meet max transition (clock)
GE_05_03_description    = Need to satisfy max_transistion requirement define in .lib & user defined max_transition constraint for clock paths (for both system-mode & test-mode)
GE_05_03_support        = 
GE_05_03_criteria       = 

GE_05_04_category       = Logical DRC
GE_05_04_owner          = DE
GE_05_04_item           = Meet max fanout
GE_05_04_description    = Need to satisfy max_fanout requirement define in .lib & user defined max_fanout constraint (Except fishbone or intentional high-FO nets)
GE_05_04_support        = 
GE_05_04_criteria       = 

GE_05_05_category       = Logical DRC
GE_05_05_owner          = DE
GE_05_05_item           = Meet max wire length
GE_05_05_description    = Need to safisfy user defined max wire length constraint
GE_05_05_support        = 
GE_05_05_criteria       =  200

GE_06_01_category       = On-chip SI
GE_06_01_owner          = DE
GE_06_01_item           = Xtalk induced delay
GE_06_01_description    = Count in the delay penalty induced by Xtalk effect for STA
GE_06_01_support        = 
GE_06_01_criteria       = 

GE_06_02_category       = On-chip SI
GE_06_02_owner          = DE
GE_06_02_item           = Minimize the Xtalk induced delay (data)
GE_06_02_description    = Do NOT allow the Xtalk penalty delay which is more than the certain amount, on each individual data nets
GE_06_02_support        = 
GE_06_02_criteria       = 

GE_06_03_category       = On-chip SI
GE_06_03_owner          = DE
GE_06_03_item           = Minimize the Xtalk induced delay (clock)
GE_06_03_description    = Do NOT allow the Xtalk penalty delay which is more than the certain amount, on each individual clock nets
GE_06_03_support        = 
GE_06_03_criteria       = 

GE_06_04_category       = On-chip SI
GE_06_04_owner          = DE
GE_06_04_item           = Xtalk noise (data)
GE_06_04_description    = Noise level needs to be less than the certain amount, on each individual data nets
GE_06_04_support        = 
GE_06_04_criteria       = 

GE_06_05_category       = On-chip SI
GE_06_05_owner          = DE
GE_06_05_item           = Xtalk noise (clock)
GE_06_05_description    = Noise level needs to be less than the certain amount, on each individual clock nets
GE_06_05_support        = 
GE_06_05_criteria       = 

GE_06_06_category       = On-chip SI
GE_06_06_owner          = DE
GE_06_06_item           = Xtalk variable and setting check
GE_06_06_description    = Correct Xtalk variable/setting is needed.
GE_06_06_support        = 
GE_06_06_criteria       = 

GE_06_07_category       = On-chip SI
GE_06_07_owner          = DE
GE_06_07_item           = Clock jitter analysis on critical special IP clock cells in system-mode
GE_06_07_description    = Need to minimize the jitter on the specific clock paths, by the PG noise dynamic analysis result. The sum of jitter values on all clock path stages needs to be evaluated.
GE_06_07_support        = 
GE_06_07_criteria       = 

GE_07_01_category       = EM
GE_07_01_owner          = DE
GE_07_01_item           = AC-EM (signal）
GE_07_01_description    = Avoid electrical migration to avoid the reliability concern. Need to meet EM criteria on signal routing
GE_07_01_support        = 
GE_07_01_criteria       = 

GE_08_01_category       = PV/DFM
GE_08_01_owner          = DE
GE_08_01_item           = DRC
GE_08_01_description    = DRC rule check
GE_08_01_support        = 
GE_08_01_criteria       = 

GE_08_02_category       = PV/DFM
GE_08_02_owner          = DE
GE_08_02_item           = Latch up
GE_08_02_description    = Latch-up rule check
GE_08_02_support        = 
GE_08_02_criteria       = 

GE_08_03_category       = PV/DFM
GE_08_03_owner          = DE
GE_08_03_item           = ANTENNA
GE_08_03_description    = Antenna rule check
GE_08_03_support        = 
GE_08_03_criteria       = 

GE_08_04_category       = PV/DFM
GE_08_04_owner          = DE
GE_08_04_item           = LVS
GE_08_04_description    = LVS rule check
GE_08_04_support        = 
GE_08_04_criteria       = 

GE_08_05_category       = PV/DFM
GE_08_05_owner          = DE
GE_08_05_item           = ERC
GE_08_05_description    = ERC rule check
GE_08_05_support        = 
GE_08_05_criteria       = 

GE_08_06_category       = PV/DFM
GE_08_06_owner          = DE
GE_08_06_item           = Flip chip or Wirebond
GE_08_06_description    = Flip chip/wire-bond rule check
GE_08_06_support        = 
GE_08_06_criteria       = 

GE_08_07_category       = PV/DFM
GE_08_07_owner          = DE
GE_08_07_item           = CMP (density)
GE_08_07_description    = CMP (density) rule check
GE_08_07_support        = 
GE_08_07_criteria       = 

GE_08_08_category       = PV/DFM
GE_08_08_owner          = DE
GE_08_08_item           = VIA
GE_08_08_description    = VIA rule check
GE_08_08_support        = 
GE_08_08_criteria       = 

GE_08_09_category       = PV/DFM
GE_08_09_owner          = DE
GE_08_09_item           = LPC (Litho Physical Check) / LFD (Litho Friendly Design)
GE_08_09_description    = LPC/LFD rule check
GE_08_09_support        = 
GE_08_09_criteria       = 

GE_08_10_category       = PV/DFM
GE_08_10_owner          = DE
GE_08_10_item           = PM (Pattern Matching)
GE_08_10_description    = PM rule check
GE_08_10_support        = 
GE_08_10_criteria       = 

GE_08_11_category       = PV/DFM
GE_08_11_owner          = DE
GE_08_11_item           = DFM Via
GE_08_11_description    = DFM via certain ratio of optimization. Needs to do it at the early stage to avoid the later impact for timing.
GE_08_11_support        = 
GE_08_11_criteria       = 

GE_08_12_category       = PV/DFM
GE_08_12_owner          = DE
GE_08_12_item           = Dummy metal
GE_08_12_description    = Dummy metal insertion. Need to do it at the early stage to avoid the later impact for timing
GE_08_12_support        = 
GE_08_12_criteria       = 

GE_08_13_category       = PV/DFM
GE_08_13_owner          = DE
GE_08_13_item           = GDS merged layers
GE_08_13_description    = Need to make sure there is NO fatal warning/error, which drops some layers to merge into the chip-level GDS.
GE_08_13_support        = 
GE_08_13_criteria       = 

GE_08_14_category       = PV/DFM
GE_08_14_owner          = DE
GE_08_14_item           = LVL
GE_08_14_description    = In case of RTO or base/metal separate TO, run LVL (Layer vs. Layout) for ALL layers, to make sure that the layer differences are only expecting ones
GE_08_14_support        = 
GE_08_14_criteria       = 

GE_08_15_category       = PV/DFM
GE_08_15_owner          = DE
GE_08_15_item           = LVL for IP macros
GE_08_15_description    = Verify the LVL between golden IP macro gdsii and Tapeout full chip gdsii
GE_08_15_support        = 
GE_08_15_criteria       = 

GE_08_16_category       = PV/DFM
GE_08_16_owner          = DE
GE_08_16_item           = Check ROM code
GE_08_16_description    = Check if Tapeout gdsii uses latest ROM code
GE_08_16_support        = no
GE_08_16_criteria       = 

GE_08_17_category       = PV/DFM
GE_08_17_owner          = DE
GE_08_17_item           = LVS netlist with IP
GE_08_17_description    = Include IP hard macro verilog model, to generate CDL by ver2lvs in Calibre
GE_08_17_support        = 
GE_08_17_criteria       = 

GE_08_18_category       = PV/DFM
GE_08_18_owner          = DE
GE_08_18_item           = DRC/other rule option setting
GE_08_18_description    = Need to fully understand the rule-deck options, to run PV correctly. Don not leave all the options as default without any intention
GE_08_18_support        = no
GE_08_18_criteria       = 

GE_08_19_category       = PV/DFM
GE_08_19_owner          = DE
GE_08_19_item           = Flip-chip bump DRC check
GE_08_19_description    = Flip-chip bump DRC rule is sometimes easily overlooked. The rule is to be drastically changed based on the die-size, or bump materials. Check the rule carefully and run DRC as early as possible, and also once the die-size is changed
GE_08_19_support        = no
GE_08_19_criteria       = 

GE_09_01_category       = ESD
GE_09_01_owner          = DE
GE_09_01_item           = ESD for IP/IO
GE_09_01_description    = Follow the IP/IO ESD guideline. (follow IP checklist)
GE_09_01_support        = no
GE_09_01_criteria       = 

GE_09_02_category       = ESD
GE_09_02_owner          = DE
GE_09_02_item           = GND rail inside IO-ring
GE_09_02_description    = GND rail needs to be all connected inside IO-ring, otherwise back-to-back diode is needed at the ring break points.
GE_09_02_support        = no
GE_09_02_criteria       = 

GE_09_03_category       = ESD
GE_09_03_owner          = DE
GE_09_03_item           = GND to other IO resistance
GE_09_03_description    = The resistance from bonded-GND IO to all other IO cells needs to be less than the certain value. It is the minimum requirement for all the cases, if there is any tighter requirement for the specific IO, or any special requirement for the design, need to follow it.
GE_09_03_support        = 
GE_09_03_criteria       = 

GE_09_04_category       = ESD
GE_09_04_owner          = DE
GE_09_04_item           = CDM consideration
GE_09_04_description    = If the IP has the separated VSS used and if there is the physical interface with the core logics, must insert the CDM protection circuit on the interface signals.
GE_09_04_support        = 
GE_09_04_criteria       = 

GE_09_05_category       = ESD
GE_09_05_owner          = DE
GE_09_05_item           = PCLAMP cells for core power
GE_09_05_description    = Insert the enough PCLAMP cells to meet ESD rule
GE_09_05_support        = 
GE_09_05_criteria       = 

GE_10_01_category       = Technology
GE_10_01_owner          = DE
GE_10_01_item           = Library/IP version
GE_10_01_description    = Check cell library version and make sure that all are what we expect
GE_10_01_support        = 
GE_10_01_criteria       = 

GE_10_02_category       = Technology
GE_10_02_owner          = DE
GE_10_02_item           = Tech file version
GE_10_02_description    = Check technology file version and make sure that all are what we expect
GE_10_02_support        = 
GE_10_02_criteria       = 

GE_10_03_category       = Technology
GE_10_03_owner          = DE
GE_10_03_item           = EDA tool version
GE_10_03_description    = Check EDA tool version and make sure that all are what we expect
GE_10_03_support        = 
GE_10_03_criteria       = 

GE_10_04_category       = Technology
GE_10_04_owner          = DE
GE_10_04_item           = Library/IP version for customer side
GE_10_04_description    = Confirm customer is using latest/final version of library and IP which we expect
GE_10_04_support        = no
GE_10_04_criteria       = 


################################################
# Tapeout                                      #
################################################

TO_01_01_category       = Dry-run
TO_01_01_owner          = DE
TO_01_01_item           = dryrun
TO_01_01_description    = Submit dryrun and complete all the tape-out procedure all the way until ejobview. It needs to be completed 2 weeks prior to real tape-out.
TO_01_01_support        = no
TO_01_01_criteria       = 

TO_01_02_category       = Dry-run
TO_01_02_owner          = DE
TO_01_02_item           = dryrun GDS
TO_01_02_description    = Dryrun GDS must achieve the following requirements.
                          * Die-size is fixed (if size is changed afterwards, need to re-run dry-run)
                          * All the required layers are included
                          * All the required libraries are included
TO_01_02_support        = 
TO_01_02_criteria       = 

TO_01_03_category       = Dry-run
TO_01_03_owner          = DE
TO_01_03_item           = dryun
TO_01_03_description    = If you have plan to tape-out base layer and metal layer seperately, submit three kind of dryruns as full-layer TO,  base layer TO and metal layer TO because  MT form and DB check result are different between the three kind of dryrun.
TO_01_03_support        = no
TO_01_03_criteria       = 

TO_02_01_category       = Tapeout
TO_02_01_owner          = DE
TO_02_01_item           = Final sign-off check list
TO_02_01_description    = Explain Final signoff check list result to all attendees
TO_02_01_support        = no
TO_02_01_criteria       = 

TO_02_02_category       = Tapeout
TO_02_02_owner          = DE&APE
TO_02_02_item           = Pinlist
TO_02_02_description    = Confirm if PKG team and DE team use the same final pinlist for the design
TO_02_02_support        = no
TO_02_02_criteria       = 

TO_02_03_category       = Tapeout
TO_02_03_owner          = DE&APE
TO_02_03_item           = GDS
TO_02_03_description    = Confirm the final GDS uploaded on TSMC ftp is really the final and reflected to MT-form
TO_02_03_support        = no
TO_02_03_criteria       = 

TO_02_04_category       = Tapeout
TO_02_04_owner          = DE
TO_02_04_item           = FDR report
TO_02_04_description    = Confirm if FDR has completed with the customer and cover all the items to be reviewed
TO_02_04_support        = no
TO_02_04_criteria       = 

TO_02_05_category       = Tapeout
TO_02_05_owner          = PM
TO_02_05_item           = Customer approval for Tapeout
TO_02_05_description    = Get the approval for Tapeout from the customer
TO_02_05_support        = no
TO_02_05_criteria       = 

TO_02_06_category       = Tapeout
TO_02_06_owner          = DE
TO_02_06_item           = IP Merge result
TO_02_06_description    = Confirm IP merge operation to tape-out gdsii is correct.
TO_02_06_support        = no
TO_02_06_criteria       = 

TO_02_07_category       = Tapeout
TO_02_07_owner          = DE
TO_02_07_item           = Layer usage
TO_02_07_description    = Identify all the GDS layers in each IP libraries, and clearly indicate which ones are to be tape-out layers and which ones are not.
TO_02_07_support        = 
TO_02_07_criteria       = 

TO_02_08_category       = Tapeout
TO_02_08_owner          = DE&PE
TO_02_08_item           = DB check
TO_02_08_description    = Review DB check result from TSMC
TO_02_08_support        = no
TO_02_08_criteria       = 

TO_02_09_category       = Tapeout
TO_02_09_owner          = DE&PE
TO_02_09_item           = MT form check
TO_02_09_description    = Review MT form contents by both DE&PE. If either of DE or PE has unclear items in MT-form, must share the info each other, or get the answer from TSMC, and make all clear.
TO_02_09_support        = no
TO_02_09_criteria       = 

TO_02_10_category       = Tapeout
TO_02_10_owner          = DE&PE
TO_02_10_item           = MT form check
TO_02_10_description    = Confirm "SRAM Poly direction" setting in MT-form is correct with TO full chip gdsii.
                          Note that, poly direction may need to be always 'horizontal' in MPW case, need to confirm with TSMC
TO_02_10_support        = no
TO_02_10_criteria       = 

TO_02_11_category       = Tapeout
TO_02_11_owner          = DE&PE
TO_02_11_item           = MT-form check
TO_02_11_description    = Check dryrun MT-form and real tape-out MT-form are same.
TO_02_11_support        = no
TO_02_11_criteria       = 

TO_02_12_category       = Tapeout
TO_02_12_owner          = DE
TO_02_12_item           = RTO
TO_02_12_description    = If RTO (Re-Tape-Out) case, run RTO checker (PV) to identify all the required mask layers to be tape-out
TO_02_12_support        = no
TO_02_12_criteria       = 

TO_02_13_category       = Tapeout
TO_02_13_owner          = DE&PE
TO_02_13_item           = MFU
TO_02_13_description    = Run MFU (Mask Field Utilization) to check the mask utilization
TO_02_13_support        = no
TO_02_13_criteria       = 

TO_02_14_category       = Tapeout
TO_02_14_owner          = DE&PE
TO_02_14_item           = Feedback from TSMC
TO_02_14_description    = Review TSMC comment and warning during TO procedure including Dryrun operation.
TO_02_14_support        = no
TO_02_14_criteria       = 

TO_02_15_category       = Tapeout
TO_02_15_owner          = DE&PE
TO_02_15_item           = ejobview result
TO_02_15_description    = Review ejobview result with DE&PE
TO_02_15_support        = no
TO_02_15_criteria       = 

TO_02_16_category       = Tapeout
TO_02_16_owner          = PM
TO_02_16_item           = Reviewers approval
TO_02_16_description    = Get the approval for TO from all attendees at Tape-out sign-off review meeting.
TO_02_16_support        = no
TO_02_16_criteria       = 


#################################################################################
# Open Items                                                                    #                                 
# ----------                                                                    #
# In any cases except "pass" at SDR, IDR, FDR and Tapeout, those open           #
# items must be completed and closed before final tape out review meeting.      #
#################################################################################

# OI_xx_xx_category       = 
# OI_xx_xx_owner          = 
# OI_xx_xx_item           = 
# OI_xx_xx_description    = 
# OI_xx_xx_support        = 
# OI_xx_xx_criteria       = 

