##==================================================================##
#                       DEFAULT                                     ##
#===================================================================##

[DEFAULT]
# bsub submit command, "-Is" is interactive mode, without "-Is" is batch mode
_job_cmd                                           = bsub -Is
# job queue, format: "-q $queue_name"
_job_queue                                         = -q fjr
# job cpu number, cpu number must put at last place, foramt "-n $cpu_number" or "-m $host_name -n $cpu_number"
_job_cpu_number                                    = -n 4
# job resources, please put centos6 at the first place, ex. "centos6 select[mem>20000]  rusage[mem=20000]"
_job_resource                                      = -R "centos6 span[hosts=1]"
# job restore cpu number, cpu number must put at last place, foramt "-n $cpu_number" or "-m $host_name -n $cpu_number"
_job_restore_cpu_number                            = -n 1
# job restore resources, please put centos6 at the first place, ex. "centos6 select[mem>20000]  rusage[mem=20000]"
_job_restore_resource                              = -R "centos6 span[hosts=1]"

# optimization flow can be: ttr|qor|hplp|arlp|hc
optimization_flow                                  = qor

# if true icc2 use DC output data path's netlist file,if false icc2 use netlist from local netlist directory
use_dc_output_netlist                              = false

# block use UPF or not
use_upf                                            = false

# ocv mode can be: ocv|aocv|pocv
ocv_mode                                           = pocv

# deoes ICC2 use SPG flow
use_spg_flow                                       = false

# use user connect_pg_net tcl in common_scripts directory
use_usr_common_scripts_connect_pg_net_tcl          = true

# max routing layer
max_routing_layer                                  = M13

# min routing layer
min_routing_layer                                  = M2

# sets placement max densiy to 0.93 by default
preroute_placement_max_util                        = 0.93  

# sets app option place.coarse.precluster to enable the preclustering in coarse placement
preroute_placement_precluster                      = false 

# sets app option place.coarse.pin_density_aware to control maximum local pin density
preroute_placement_pin_density_aware               = false 

#if needed, sets place_opt/clock_opt/refine_opt.flow.optimize_ndrs to true
preroute_ndr_optimization                          = false  

# sets place_opt.flow.optimize_layers_critical_range to the specified value
preroute_layer_optimization_critical_range          = 0.7 

# TIE cell max fanout control
tie_cell_max_fanout                                 =  4

# Default false; enables early clock tree synthesis; sets place_opt.flow.trial_clock_tree to true
place_opt_trial_cts                                 = false 

# enable icg optimization during place_opt
place_opt_optimize_icgs                             = false 

# sets place_opt.flow.optimize_icgs_critical_range to the value specified; tool default is 0.75
place_opt_optimize_icgs_critical_range              = 0.75 

#  enable placement to use automatic group bounds created for ICGs and sequentials
place_opt_icg_auto_bound                            = true          

# enable placement to use automatic group bounds for ICG max fanout 
place_opt_icg_auto_bound_fanout_limit               =  32 

#sets place_opt.flow.clock_aware_placement to true. place_opt will try to improve ICG enable timing
place_opt_clock_aware_placement                     = false   

# enables identify_multibit during place_opt
place_opt_multibit_banking                          = false

# enables split_multibit during place_opt
place_opt_multibit_debanking                        = false 

# opt do dynamic power
opt_dynamic_power                                   = true

# data path max fanout
data_path_max_fanout                                = 32

# data path max net length 
data_path_max_net_length                            = 600

# specify with lvt lib_cell list                
lvt_lib_cell_list                                   = 

# specify with svt lib cell list
svt_lib_cell_list                                   = 

# specify with hvt lib cell list
hvt_lib_cell_list                                   =

# specify with lvth cell max percentage
lvth_cell_max_percentage                            = 

# saif file for low power placement
switch_activity_file                                =

# lib cell dont used in block
lib_cell_dont_use_list                              = 

# special placement spacing rule required by process
tcl_placement_spacing_label_rule_file               = 

# tcl with clock tree routing rule, sourced in icc2 common setting
tcl_icc2_cts_ndr_rule_file                          =

# multi-viltage voltage area and other power domian related setup file
tcl_mv_setup_file                                   = 

# set clock net max length during cts
cts_max_net_length                                  = 350

# set clock net max fanout during cts       
cts_max_fanout                                      = 24                                  

# set skew target for all actived clock/clock_opt scenario
cts_target_skew                                     =      

# set latency target for all actived clock/clock_opt scenario
cts_target_latency                                  = 

# set ndr rule for clock tree root net, ex. clk_1w1s
cts_root_ndr_rule_name                              = 

# set ndr rule for clock tree internal net, ex. clk_2w2s
cts_internal_ndr_rule_name                          = 

# set ndr rule for clock tree sink net, ex. clk_2w2s
cts_sink_ndr_rule_name                              =  

# set ndr min routing layer for clock tree root net, ex. M2
cts_root_ndr_min_routing_layer                      =

# set ndr max routing layer for clock tree root net, ex. M9
cts_root_ndr_max_routing_layer                      =

# set ndr min routing layer for clock tree internal net, ex. M2
cts_internal_ndr_min_routing_layer                  =

# set ndr max routing layer for clock tree internal net, ex. M9
cts_internal_ndr_max_routing_layer                  =

# set ndr min routing layer for clock tree sink net, ex. M2
cts_sink_ndr_min_routing_layer                      =

# set ndr max routing layer for clock tree sink net, ex. M2
cts_sink_ndr_max_routing_layer                      =

# set clock tree synthesis used cts lib cells, , ex. */*CK*X1* */*D2* 
cts_lib_cell_pattern_list                           = 
# set signal port isolate lib cell, ex */BUFF4X..
isolate_signal_port_libcell                         =

# set clock port isolate lib cell, ex */BUFF4X..
isolate_clock_port_libcell                          =

# run refine_opt after place_opt
place_opt_refine_opt                                = false

# run refine opt with high effort, will result more run time
place_opt_refine_opt_effort_high                    = false

# if icc2 tech file unit is mismatch with LEF site, need specify unit convert list
write_def_convert_icc2_site_to_lef_site_name_list   = 

# gds out map file
icc_icc2_gds_layer_mapping_file                     = 

# fill tech_ndm name, example tech_only
tech_ndm                                            = tech_only          

# fill scenario table, format: mode.lib_norminal_voltage.lib_corner.rc_corner_temprature.anaysis_type, EX: func.tt0p8v.wcl.cworst_CCworst_T_m40c.setup
scenario_list                                       = func.tt0p8v.wcl.cworst_CCworst_T_m40c.setup

# fill process table, example 1
process_list                                        = 1

# optional,fill process label table, example fast slow
process_label_list                                  = 

# optional,fill setup table with true/false
scenario_status_leakage_power                       = false

# optional,fill setup table with true/false
scenario_status_dynamic_power                       = false

# optional,fill setup table with true/false
scenario_status_max_transition                      = true

# optional,fill setup table with true/false 
scenario_status_max_capacitance                     = true

# fill voltage1 table, example "{VDD-0.9 VSS-0.0 VDDH-1.16}"
voltage_list                                        = {VDD-0.72 VSS-0.0}

# fill with corner names, example wcl
timing_derate_lib_corner_list                       = wcl

# optional,data net early derate for each corner
data_net_early_derate_list                          = 0.93

# optional,data net late derate for each corner
data_net_late_derate_list                           = 1.07

# optional,clock net early derate for each corner
clock_net_early_derate_list                         = 0.93

# optional,clock net late derate for each corner
clock_net_late_derate_list                          = 1.07

# optional, early derate for data path cells
data_cell_early_derate_list                         = 

# optional, late derate for data path cells
data_cell_late_derate_list                          = 

# optional, early derate for clock path cells
clock_cell_early_derate_list                        = 

# optional, late derate for data path cells
clock_cell_late_derate_list                         = 

# ptional, memory's lib cells for derate, example */*RAM64x128*
mem_list                                            = 

# optional, early derate for listed memories
mem_early_derate_list                               =

# optional, late derate for listed memories
mem_late_derate_list                                =

# report items, "true" to enable report items, "false" to disable report items
common_report_scenario                              = true
common_report_pvt                                   = true
common_report_qor                                   = true
common_report_timing                                = true
common_report_constraint                            = true
common_report_congestion_map                        = true
common_report_threshold_voltage_group               = true
common_report_power                                 = true
common_report_mv_path                               = true
common_report_utilization                           = true
common_report_units                                 = true
common_report_detail_timing                         = true
fp_report_zero_interconnect_delay_timing            = true
cts_report_clock_tree_info                          = true
route_no_si_timing_report                           = true
route_check_route                                   = true

##==================================================================##
#                        01_fp.tcl                                  ##
#===================================================================##
[01_fp.tcl]
_exec_cmd                                           =  icc2_shell -output_log_file icc2_fp.log -f
_exec_tool                                          =  module load synopsys/icc2_vM-2016.12-SP4 

# read def "-convert" option, convert SITE name in def to the unit name in ICC2 techfile, if not required, leave it as emppty
def_convert_site_list                               =  

# if "false" no report as well as user report will not been report, if "true" report feature will be enable
enable_report                                       = false

# if "true" manual floorplan is enable, 01_fp stage will stop after read input data waiting for manual floorplan
enable_manual_floorplan                             = false

# if "true", IO hold fix will eanble, if false, IO hold will set as false path 
fix_io_hold                                         = false

# if "true" 01_fp data writing feature will enalbe, to enable usr write data or auto write data, this variable should be true
fp_write_data                                       = true

# if "true" 01_fp reporting feature will enalbe, to enable usr reporting or auto reporting, this variable should be true
enable_fp_reporting                                 = true

# if "true" use plugin file "plugins/icc2_scripts/01_fp/08_usr_write_data.tcl" for 01_fp data writing
fp_use_usr_write_data                               = false

# if "true" use plugin file "plugins/icc2_scripts/01_fp/09_usr_fp_report.tcl" for 01_fp reporting 
fp_use_usr_report_tcl                               = false

##==================================================================##
#                        02_place.tcl                               ##
#===================================================================##
[02_place.tcl]
_exec_cmd                                           =  icc2_shell -output_log_file icc2_place.log -f
_exec_tool                                          =  module load synopsys/icc2_vM-2016.12-SP4 

# specify place_opt active scenario list, format: mode.lib_norminal_voltage.lib_corner.rc_corner_temprature.anaysis_type
# sdc file will be selected with format "blk.$mode.sdc"
place_opt_active_scenario_list                      = func.tt0p8v.wcl.cworst_CCworst_T_m40c.setup

# enable user "plugins/icc2_scripts/02_place/01_usr_place_opt_cmd.tcl" instead of template place_opt run command
use_usr_place_opt_cmd_tcl                           = false

# enable user "plugins/icc2_scripts/02_place/02_usr_pre_refine_opt.tcl" instead of template place_opt run command
use_usr_refine_opt_cmd_tcl                          = false

# if "true" enable ccd feature at place_opt, need setup clock tree related options as well for CCD
place_enable_ccd                                    = false

# specify SAIF file for low power placement
switch_activity_file                                = 

# optional, specify with low power placement scenairo 
switch_activity_file_power_scenario                 =

# optional, specify SAIF source instace name 
switch_activity_file_source_instance                =

# optional, specify SAIF target instace name 
switch_activity_file_target_instance                =

# if "true" 02_place data writing feature will enalbe, to enable usr write data or auto write data, this variable should be true
place_write_data                                    = true

# if "true" 02_place reporting feature will enalbe, to enable usr reporting or auto reporting, this variable should be true
enable_place_reporting                              = true

# if "true" use plugin file "plugins/icc2_scripts/02_place/08_usr_write_data.tcl" for 02_place data writing
place_use_usr_write_data_tcl                        = false

# if "true" use plugin file "plugins/icc2_scripts/02_place/09_usr_place_report.tcl" for 02_place reporting 
place_use_usr_report_tcl                            = false

# if "true" create abstract and frame view for design block. ICC2 hier flow need block's abstract view for top enclosure
place_create_abstract                               = false

##==================================================================##
#                        03_clock.tcl                               ##
#===================================================================##
[03_clock.tcl]
_exec_cmd                                           =  icc2_shell -output_log_file icc2_clock.log -f
_exec_tool                                          =  module load synopsys/icc2_vM-2016.12-SP4 

# specify clock active scenario list, format: mode.lib_norminal_voltage.lib_corner.rc_corner_temprature.anaysis_type
clock_active_scenario_list                          = func.tt0p8v.wcl.cworst_CCworst_T_m40c.setup

# if "true" enable ccd feature at clock_opt
clock_enable_ccd                                    = false

# enable user "plugins/icc2_scripts/03_clock/01_usr_clock_cmd.tcl" instead of template clock_opt run command
use_usr_clock_cmd_tcl                               = false

# specify with cts inserted new cell prefix name
clock_opt_cts_name_prefix                           = alchip_cts

# if "true" 03_clock data writing feature will enalbe, to enable usr write data or auto write data, this variable should be true
clock_write_data                                    = true

# if "true" 03_clock reporting feature will enalbe, to enable usr reporting or auto reporting, this variable should be true
enable_clock_reporting                              = true
  
# if "true" use plugin file "plugins/icc2_scripts/03_clock/08_usr_write_data.tcl" for 03_clock data writing
clock_use_usr_write_data_tcl                        = false

# if "true" use plugin file "plugins/icc2_scripts/03_clock/09_usr_clock_report.tcl" for 03_clock reporting 
clock_use_usr_report_tcl                            = false

# if "true" create abstract and frame view for design block. ICC2 hier flow need block's abstract view for top enclosure
clock_create_abstract                               = false

##==================================================================##
#                        04_clock_opt.tcl                           ##
#===================================================================##
[04_clock_opt.tcl]
_exec_cmd                                           =  icc2_shell -output_log_file icc2_clock_opt.log -f
_exec_tool                                          =  module load synopsys/icc2_vM-2016.12-SP4

# specify clock opt active scenario list, format: mode.lib_norminal_voltage.lib_corner.rc_corner_temprature.anaysis_type
clock_opt_active_scenario_list                      = func.tt0p8v.wcl.cworst_CCworst_T_m40c.setup

# if "true" enable ccd feature at clock_opt
clock_opt_enable_ccd                                = true

# Post-route clock tree optimization for non-CCD flow, exclusive with option "clock_opt_enable_ccd = true"
clock_opt_opto_cto                                  = false

# specify with clock opt optimization inserted new cell prefix name
clock_opt_opto_name_prefix                          = alchip_clock_opto

# specify with cto inserted new cell prefix name
clock_opt_opto_cto_name_prefix                      = alchip_clock_opto_cto

# enable user "plugins/icc2_scripts/04_clock_opt/01_usr_clock_opt_cmd.tcl" instead of template clock_opt run command
use_usr_clock_opt_cmd_tcl                           = false

# if "true" 04_clock_opt data writing feature will enalbe, to enable usr write data or auto write data, this variable should be true
clock_opt_write_data                                = true

# if "true" 04_clock_opt reporting feature will enalbe, to enable usr reporting or auto reporting, this variable should be true
enable_clock_opt_reporting                          = true

# if "true" use plugin file "plugins/icc2_scripts/04_clock_opt/08_usr_write_data.tcl" for 04_clock_opt data writing
clock_opt_use_usr_write_data_tcl                    = false

# if "true" use plugin file "plugins/icc2_scripts/04_clock_opt/09_usr_clock_opt_report.tcl" for 04_clock_opt reporting
clock_opt_use_usr_report_tcl                        = false

# if "true" create abstract and frame view for design block. ICC2 hier flow need block's abstract view for top enclosure
clock_opt_create_abstract                           = false

##==================================================================##
#                        05_route.tcl                               ##
#===================================================================##
[05_route.tcl]
_exec_cmd                                           =  icc2_shell -output_log_file icc2_opt.log -f
_exec_tool                                          =  module load synopsys/icc2_vM-2016.12-SP4 

# specify route active scenario list, format: mode.lib_norminal_voltage.lib_corner.rc_corner_temprature.anaysis_type
route_active_scenario_list                          = func.tt0p8v.wcl.cworst_CCworst_T_m40c.setup

# if "true" route stage will fix antenna
route_auto_antenna_fixing                           = false

# specify with tcl antenna rule file if "route_auto_antenna_fixing" is "true"
tcl_antenna_rule_file                               = 

# if "true" route stage will optimize doulbe via
icc2_route_optimize_double_via                      = false

# if "true", reserve space will reserve more routing resource, default is off, if turn to true, will use reserve_space
concurrent_redundant_via_mode_reserve_space         = false

# provide icc2 format redundant via map file for "add_redundant_vias, only one of "icc2 format" or "icc_format" is requred to been fill within
tcl_user_icc2_format_redundant_via_mapping_file     =

# provide icc format redundant via map file for "add_redundant_vias", only one of "icc2 format" or "icc_format" is requred to been fill within
tcl_user_icc_format_redundant_via_mapping_file      =

# if "true" enable si analysis at route stage
si_enable_analysis                                  = true

# Specify a lower number for the router to pick up more nets as xtalk critical nets
route_common_threshold_noise_ratio                  = 0.25

# if "true" 05_route data writing feature will enalbe, to enable usr write data or auto write data, this variable should be true
route_write_data                                    = true

# if "true" 05_route data writing gds feature will enalbe, to enable usr write data or auto write data, this variable should be true
route_write_gds                                     = false

# if "true" 05_route reporting feature will enalbe, to enable usr reporting or auto reporting, this variable should be true
enable_route_reporting                              = true

# if "true" use plugin file "plugins/icc2_scripts/05_route/08_usr_write_data.tcl" for 05_route stage data writing
route_use_usr_write_data_tcl                        = false

# if "true" use plugin file "plugins/icc2_scripts/05_route/09_usr_route_report.tcl" for 05_route reporting
route_use_usr_report_tcl                            = false

# if "true" create abstract and frame view for design block. ICC2 hier flow need block's abstract view for top enclosure
route_create_abstract                               = false

##==================================================================##
#                        06_route_opt.tcl                           ##
#===================================================================##
[06_route_opt.tcl]
_exec_cmd                                           =  icc2_shell -output_log_file icc2_route_opt.log -f
_exec_tool                                          =  module load synopsys/icc2_vM-2016.12-SP4 

# specify route_opt active scenario list, format: mode.lib_norminal_voltage.lib_corner.rc_corner_temprature.anaysis_type
route_opt_active_scenario_list                      = func.tt0p8v.wcl.cworst_CCworst_T_m40c.setup

# specify with route opt optimization inserted new cell prefix name
route_opt_name_prefix                               = alchip_route_opto

# if "true" enable Post-route optimization CCD flow
route_opt_enable_ccd                                = false

# if "true" enable antenna fix during route_opt
route_opt_antenna_fixing                            = false

# specify with tcl antenna rule file if "route_auto_antenna_fixing" is "true"
tcl_antenna_rule_file                               = 

# if "true" route opt detail route stage will optimize doulbe via
icc2_route_opt_optimize_double_via                  = false

# if "true" route opt stage will optimize leakage power
route_opt_leakage_power_optimization                = false

# provide icc2 format redundant via map file for "add_redundant_vias, only one of "icc2 format" or "icc_format" is requred to been fill within
tcl_user_icc2_format_redundant_via_mapping_file     =

# provide icc format redundant via map file for "add_redundant_vias, only one of "icc2 format" or "icc_format" is requred to been fill within
tcl_user_icc_format_redundant_via_mapping_file      =

# if "true" enable si analysis at route stage
si_enable_analysis                                  = true

# Specify a lower number for the router to pick up more nets as xtalk critical nets
route_common_threshold_noise_ratio                  = 0.25

# if "true" 06_route_opt data writing feature will enalbe, to enable usr write data or auto write data, this variable should be true
route_opt_write_data                                = true

# if "true" 06_route_opt data writing gds feature will enalbe, to enable usr write data or auto write data, this variable should be true
route_opt_write_gds                                 = false

# if "true" 06_route_opt reporting feature will enalbe, to enable usr reporting or auto reporting, this variable should be true
enable_route_opt_reporting                          = true

# if "true" use plugin file "plugins/icc2_scripts/06_route_opt/08_usr_write_data.tcl" for 06_route_opt stage data writing
route_opt_use_usr_write_data_tcl                    = false

# if "true" use plugin file "plugins/icc2_scripts/06_route_opt/09_usr_route_report.tcl" for 06_route_opt reporting
route_opt_use_usr_report_tcl                        = false

# if "true" create abstract and frame view for design block. ICC2 hier flow need block's abstract view for top enclosure
route_opt_create_abstract                           = false

##==================================================================##
#                        07_eco.tcl                                 ##
#===================================================================##
[07_eco.tcl]
_exec_cmd                                           =  icc2_shell -output_log_file icc2_eco.log -f
_exec_tool                                          =  module load synopsys/icc2_vM-2016.12-SP4 

##==================================================================##
#                        08_finish.tcl                              ##
#===================================================================##
[08_finish.tcl]
_exec_cmd                                           =  icc2_shell -output_log_file icc2_finish.log -f
_exec_tool                                          =  module load synopsys/icc2_vM-2016.12-SP4 

# specify route_opt active scenario list, format: mode.lib_norminal_voltage.lib_corner.rc_corner_temprature.anaysis_type
finish_active_scenario_list                         = func.tt0p8v.wcl.cworst_CCworst_T_m40c.setup

# if "true" enable metal fill inserting feature at 08_finish stage, run with ICV, need provide ICV metal fill runset file
finish_create_metal_fill                            = false

# specify ICV metal fill runset for 08_finish stage
finish_create_metal_fill_runset                     = 

# specify metal fill timing driven threshold to preserve timing during metal fill inserting
finish_create_metal_fill_timing_driven_threshold    = 

# specify ICV drc runset file, if want use ICV in-design auto drc fix feature
finish_drc_icv_runset                               = 

# specify GDCAP metal filler prefix 
finish_metal_filler_gdcap_prefix                    = alchip_filler_GDCAP

# specify DCAP metal filler prefix 
finish_metal_filler_dcap_prefix                     = alchip_filler_DCAP

# specify no metal filler prefix 
finish_non_metal_filler_prefix                      = alchip_filler_FILLER

# specify GDCAP metal filler cell list, need been ordered from biger size to smaller size, ex. */*GDCAPx32* */*GDCAPx16* ... 
finish_metal_filler_gdcap_cell_list                 = 

# specify DCAP metal filler cell list, need been ordered from biger size to smaller size, ex. */*DCAPx32* */*DCAPx16* ...
finish_metal_filler_dcap_cell_list                  = 

# specify no metal filler cell list, need been ordered from biger size to smaller size, ex. */*FILLx32* */*FILLx16* ...
finish_non_metal_filler_lib_cell_list               = 

# specify gdcap metal fill insertion special rule, ex. some design need "no_1x" rule for filler insertion, you can specify other rules here 
finish_metal_fller_gdcap_rule                       = no_1x

# specify dcap metal fill insertion special rule, ex. some design need "no_1x" rule for filler insertion, you can specify other rules here
finish_metal_fller_dcap_rule                        = no_1x

# specify no metal fill insertion special rule, ex. some design need "no_1x" rule for filler insertion, you can specify other rules here
finish_non_metal_fller_rule                         = 

#  if "true" use plugin file "plugins/icc2_scripts/08_finish/01_usr_finish_filler_cell_insertion_cmd.tcl" for 08_finish user finish_filler_cell insertion command
use_usr_filler_cell_insertion_cmd_file              = false

# if "true" use plugin file "plugins/icc2_scripts/08_finish/02_usr_finish_metal_fill_cmd.tcl" for 08_finish user finish_metal_fill command
use_usr_metal_fill_cmd_tcl                          = false

# specify metal fill selected layer for metal fill insertion, ex. M1 M2 M3 M4 M5 M6 M7 ....
metal_fill_insertion_select_layers                  = M1 VIA1 M2 VIA2 

# if "true" 08_finish data writing feature will enalbe, to enable usr write data or auto write data, this variable should be true
finish_write_data                                   = true

# if "true" 08_finish data writing gds feature will enalbe, to enable usr write data or auto write data, this variable should be true
finish_write_gds                                    = false

# if "true" 08_finish reporting feature will enalbe, to enable usr reporting or auto reporting, this variable should be true
enable_finish_reporting                             = true

# if "true" use plugin file "plugins/icc2_scripts/08_finish/08_usr_write_data.tcl" for 08_finish stage data writing
finish_use_usr_write_data_tcl                       = false

# if "true" use plugin file "plugins/icc2_scripts/08_finish/09_usr_finish_report.tcl" for 08_finish reporting
finish_use_usr_report_tcl                           = false

# if "true" create abstract and frame view for design block. ICC2 hier flow need block's abstract view for top enclosure
finish_create_abstract                              = true


